/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package InterfazGrafica;

import InterfazGrafica.Busqueda.BuscarProveedor;
import LogicaDeNegocio.ExcepcionCargaParametros;
import LogicaDeNegocio.Localidad;
import LogicaDeNegocio.Organizacion;
import LogicaDeNegocio.Proveedor;
import Persistencia.ExcepcionPersistencia;
import java.awt.Component;
import java.awt.Toolkit;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.DefaultListCellRenderer;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author usuario
 */
public class ABMProveedor extends javax.swing.JFrame implements TransferenciaInstancias {

    public class MiRenderizadorDeCeldasDeListasDeObjetos extends DefaultListCellRenderer {
        @Override
        public Component getListCellRendererComponent(
            JList list,
            Object value,
            int index,
            boolean isSelected,
            boolean cellHasFocus) {
            if (value instanceof Localidad) {
                value = ((Localidad)value).getNombre();
            }
            super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
            return this;
        }
    }
    /**
     * Creates new form ABMProveedor
     */
    private Organizacion organizacion;
    private JFrame ventanaAnterior;
    private Proveedor unProveedorSeleccionado;
    private String trayectoriaActual;
    private String operacionActual;
    public void setUnProveedorSeleccionado(Proveedor unProveedorSeleccionado) {
        this.unProveedorSeleccionado = unProveedorSeleccionado;
    }
    public ABMProveedor() {
        initComponents();
    }



    public ABMProveedor(Organizacion organizacion, JFrame ventanaAnterior, String trayectoriaAnterior) {
        this.setUndecorated(true);
        initComponents();
        this.setSize(Toolkit.getDefaultToolkit().getScreenSize());
        this.organizacion = organizacion;
        this.getContentPane().setBackground(ParametrosDeInterfaz.colorFondo);
        setIconImage(new ImageIcon(getClass().getResource(ParametrosDeInterfaz.rutaIcono)).getImage());
        trayectoriaActual = trayectoriaAnterior+" - Gestionar Proveedores";
        cabeceraDeVentana.configurarCabecera(ventanaAnterior, this, "Gestion de Proveedores", this.trayectoriaActual, organizacion.getUsuarioActivo().getApellido()+", "+organizacion.getUsuarioActivo().getNombre());
        
        cargarLocalidades();

        this.setVisible(true); 
        jBBuscar.setVisible(false);
        
        this.ventanaAnterior = ventanaAnterior;
        ParametrosDeInterfaz.configurarVentana(this);
    }
    private void organizarElementos(){
        this.deshabilitarTodo();
        cargarLocalidades();
        switch((String)jCBOperacion.getSelectedItem()){
            case "Alta":
                prepararAlta();
                break;
            case "Baja":
                prepararBaja();
                break;
            case "Modificacion":
                prepararModificacion();
                break;
            default:
                limpiarCampos();
                break;
                
        }
        //this.pack();
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLRazonSocial = new javax.swing.JLabel();
        jTFRazonSocial = new javax.swing.JTextField();
        jLOperacion = new javax.swing.JLabel();
        jBConcretarAccion = new javax.swing.JButton();
        jBCancelar = new javax.swing.JButton();
        jLCUIL = new javax.swing.JLabel();
        jTFCUIT = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jCBOperacion = new javax.swing.JComboBox<>();
        jBBuscar = new javax.swing.JButton();
        jLEstado = new javax.swing.JLabel();
        jCBEstado = new javax.swing.JComboBox<>();
        cabeceraDeVentana = new InterfazGrafica.CabeceraDeVentana();
        jLLocalidad = new javax.swing.JLabel();
        jCBLocalidad = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 255, 153));

        jLRazonSocial.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLRazonSocial.setText("Razon Social");
        jLRazonSocial.setEnabled(false);

        jTFRazonSocial.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jTFRazonSocial.setText("Ingrese un Nombre");
        jTFRazonSocial.setEnabled(false);

        jLOperacion.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLOperacion.setText("Carga de Proveedor");
        jLOperacion.setEnabled(false);

        jBConcretarAccion.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jBConcretarAccion.setText("Aceptar");
        jBConcretarAccion.setEnabled(false);
        jBConcretarAccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBConcretarAccionActionPerformed(evt);
            }
        });

        jBCancelar.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jBCancelar.setText("Cancelar");
        jBCancelar.setEnabled(false);
        jBCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelarActionPerformed(evt);
            }
        });

        jLCUIL.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLCUIL.setText("CUIT");
        jLCUIL.setEnabled(false);

        jTFCUIT.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jTFCUIT.setText("Ingrese un CUIT");
        jTFCUIT.setEnabled(false);

        jLabel12.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLabel12.setText("Seleccione una operacion");

        jCBOperacion.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jCBOperacion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "Alta", "Baja", "Modificacion" }));
        jCBOperacion.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCBOperacionItemStateChanged(evt);
            }
        });

        jBBuscar.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jBBuscar.setText("Buscar un Proveedor");
        jBBuscar.setEnabled(false);
        jBBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBuscarActionPerformed(evt);
            }
        });

        jLEstado.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLEstado.setText("Estado");
        jLEstado.setEnabled(false);

        jCBEstado.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jCBEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Activo", "Baja" }));
        jCBEstado.setEnabled(false);

        jLLocalidad.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLLocalidad.setText("Localidad");
        jLLocalidad.setEnabled(false);

        jCBLocalidad.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jCBLocalidad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar" }));
        jCBLocalidad.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cabeceraDeVentana, javax.swing.GroupLayout.DEFAULT_SIZE, 1444, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLCUIL)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTFCUIT, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCBOperacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jBBuscar))
                            .addComponent(jLOperacion)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLRazonSocial)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTFRazonSocial, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(74, 74, 74)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLLocalidad)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jCBLocalidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLEstado)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jCBEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jBConcretarAccion)
                        .addGap(18, 18, 18)
                        .addComponent(jBCancelar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cabeceraDeVentana, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jCBOperacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBBuscar))
                .addGap(18, 18, 18)
                .addComponent(jLOperacion)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLRazonSocial)
                    .addComponent(jTFRazonSocial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLEstado)
                    .addComponent(jCBEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLCUIL)
                    .addComponent(jTFCUIT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLLocalidad)
                    .addComponent(jCBLocalidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBCancelar)
                    .addComponent(jBConcretarAccion))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void jBConcretarAccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBConcretarAccionActionPerformed
        try {
            switch ((String)jCBOperacion.getSelectedItem()){
                case "Alta":
                    Localidad unaLocalidad = null;
                    if (!jCBLocalidad.getSelectedItem().equals("Seleccionar"))
                        unaLocalidad = (Localidad)jCBLocalidad.getSelectedItem();
                    this.organizacion.registrarProveedor(jTFRazonSocial.getText(), jTFCUIT.getText(), unaLocalidad);
                    break;
                case "Baja":
                    this.organizacion.darDeBajaUnProveedor(unProveedorSeleccionado);
                    break;
                case "Modificacion":
                    this.organizacion.modificarProveedor(unProveedorSeleccionado, jTFRazonSocial.getText(), jTFCUIT.getText(), (String)jCBEstado.getSelectedItem());
                    break;
            }
            JOptionPane.showMessageDialog(null, "Operacion realizada con exito.");
            limpiarCampos();
        } catch (ExcepcionCargaParametros ex) {
            JOptionPane.showMessageDialog(null, "Error: "+ex.getMessage());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error en la base de datos: "+ex.getMessage());
        } catch (ExcepcionPersistencia ex) {
            JOptionPane.showMessageDialog(null, "Error en la persistencia: "+ex.getMessage());
        }
    }//GEN-LAST:event_jBConcretarAccionActionPerformed

    private void jBCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelarActionPerformed
        this.limpiarCampos();
    }//GEN-LAST:event_jBCancelarActionPerformed

    private void jCBOperacionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCBOperacionItemStateChanged
        if (!jCBOperacion.getSelectedItem().equals("Seleccionar")){
            this.organizarElementos();
            
        }
        
    }//GEN-LAST:event_jCBOperacionItemStateChanged

    private void jBBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBuscarActionPerformed
        BuscarProveedor unaVentana = new BuscarProveedor(this.organizacion, this, this.trayectoriaActual);
        this.dispose();
    }//GEN-LAST:event_jBBuscarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ABMProveedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ABMProveedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ABMProveedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ABMProveedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ABMProveedor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private InterfazGrafica.CabeceraDeVentana cabeceraDeVentana;
    private javax.swing.JButton jBBuscar;
    private javax.swing.JButton jBCancelar;
    private javax.swing.JButton jBConcretarAccion;
    private javax.swing.JComboBox<String> jCBEstado;
    private javax.swing.JComboBox<Object> jCBLocalidad;
    private javax.swing.JComboBox<String> jCBOperacion;
    private javax.swing.JLabel jLCUIL;
    private javax.swing.JLabel jLEstado;
    private javax.swing.JLabel jLLocalidad;
    private javax.swing.JLabel jLOperacion;
    private javax.swing.JLabel jLRazonSocial;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JTextField jTFCUIT;
    private javax.swing.JTextField jTFRazonSocial;
    // End of variables declaration//GEN-END:variables

    private void deshabilitarTodo(){
        jLOperacion.setEnabled(false);
        jLRazonSocial.setEnabled(false);
        jLCUIL.setEnabled(false);
        jLLocalidad.setEnabled(false);
        jCBLocalidad.setEnabled(false);
        jLEstado.setEnabled(false);
        jLEstado.setVisible(false);
        
        jBBuscar.setVisible(false);
        jCBEstado.setVisible(false);
        
        jCBOperacion.setEnabled(false);
        jTFRazonSocial.setEnabled(false);
        jCBEstado.setEnabled(false);
        jTFCUIT.setEnabled(false);
        
        jBConcretarAccion.setEnabled(false);
        jBCancelar.setEnabled(false);
        
    }
    
    private void limpiarCampos() {
                this.operacionActual = "";
                jLOperacion.setText("Operacion:");
                
                jTFRazonSocial.setText("");
                jTFCUIT.setText("");
                
                jLOperacion.setEnabled(false);
                jBBuscar.setVisible(false);

                jLRazonSocial.setEnabled(false);
                jTFRazonSocial.setEnabled(false);
                jLCUIL.setEnabled(false);
                jTFCUIT.setEnabled(false);
                jBConcretarAccion.setEnabled(false);
                jBCancelar.setEnabled(false);
                jCBOperacion.setSelectedItem("Seleccionar");
                jLEstado.setEnabled(false);
                jCBEstado.setEnabled(false);
                jLLocalidad.setEnabled(false);
                jCBLocalidad.setSelectedItem("Seleccionar");
                jCBLocalidad.setEnabled(false);
                this.jCBOperacion.setEnabled(true);
                this.unProveedorSeleccionado = null;
    }

    @Override
    public void actualizarUnObjeto(Object UnObjeto) {
        Proveedor unProveedor = (Proveedor) UnObjeto;
        this.unProveedorSeleccionado = unProveedor;
        jTFRazonSocial.setText(unProveedor.getRazonSocial());
        jTFCUIT.setText(unProveedor.getCuit());
        jCBEstado.setSelectedItem(unProveedor.getEstado());
        
        
        organizarElementos();
                jCBLocalidad.setSelectedItem(unProveedor.getLocalidad());//ARREGLAR

        jBConcretarAccion.setEnabled(true);
        jBCancelar.setEnabled(true);
        this.pack();
    }

    private void prepararAlta() {
        this.operacionActual = "Alta";
        jLRazonSocial.setEnabled(true);
        jLCUIL.setEnabled(true);
        jLEstado.setEnabled(true);
        jLLocalidad.setEnabled(true);
        
        
        jTFRazonSocial.setEnabled(true);
        jCBEstado.setEnabled(true);
        jCBLocalidad.setEnabled(true);
        jTFCUIT.setEnabled(true);
        
        jBConcretarAccion.setEnabled(true);
        jBCancelar.setEnabled(true);
        
        
        jBConcretarAccion.setText("Dar de Alta un proveedor");
        jLOperacion.setText("Alta de un proveedor.");
        jLOperacion.setEnabled(true);
        
    }
    
    private void prepararBaja() {
        this.operacionActual = "Baja";
        jLOperacion.setEnabled(true);
        jLRazonSocial.setEnabled(true);
        jLCUIL.setEnabled(true);
        jLEstado.setEnabled(true);
        jLLocalidad.setEnabled(true);
        
        jLEstado.setVisible(true);
        jCBEstado.setVisible(true);
        
        
        jBBuscar.setVisible(true);
        jBBuscar.setEnabled(true);
        jBCancelar.setEnabled(true);
        
        jLOperacion.setText("Baja de un proveedor.");
        if (this.unProveedorSeleccionado == null)
            return;
        jBConcretarAccion.setText("Dar de Baja un proveedor");
    }

    private void prepararModificacion() {
        this.operacionActual = "Modificacion";
        jBBuscar.setVisible(true);
        jBBuscar.setEnabled(true);
        jBCancelar.setEnabled(true);
        if (unProveedorSeleccionado == null)
            return;
        jBConcretarAccion.setText("Guardar cambios");
        
        jLLocalidad.setEnabled(true);
        jCBLocalidad.setEnabled(true);
        jLOperacion.setEnabled(true);
        jLRazonSocial.setEnabled(true);
        jLCUIL.setEnabled(true);
        jLEstado.setEnabled(true);
        
        jLEstado.setVisible(true);
        jCBEstado.setVisible(true);

        jTFRazonSocial.setEnabled(true);
        jCBEstado.setEnabled(true);
        jTFCUIT.setEnabled(true);
        
        jBConcretarAccion.setEnabled(true);
        

    }

    public String getOperacionActual() {
        return operacionActual;
    }

    private void cargarLocalidades() {
        jCBLocalidad.removeAllItems();
        jCBLocalidad.addItem("Seleccionar");
        Iterator recorredorLocalidadesActivas = organizacion.getLocalidadesActivas().iterator();
        while (recorredorLocalidadesActivas.hasNext()){
            Localidad unaLocalidad = (Localidad) recorredorLocalidadesActivas.next();
            jCBLocalidad.addItem(unaLocalidad);
        }
        jCBLocalidad.setRenderer(new MiRenderizadorDeCeldasDeListasDeObjetos());
    }
    

}
