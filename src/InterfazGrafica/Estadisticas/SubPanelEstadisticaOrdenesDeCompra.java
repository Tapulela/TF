/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package InterfazGrafica.Estadisticas;

import InterfazGrafica.Busqueda.BuscarCriterioAnalisisLaboratorio;
import InterfazGrafica.Busqueda.BuscarEquipamiento;
import InterfazGrafica.Busqueda.BuscarLote;
import InterfazGrafica.Busqueda.BuscarOrdenCompra;
import InterfazGrafica.Busqueda.BuscarOrdenDeProduccion;
import InterfazGrafica.Busqueda.BuscarProveedor;
import InterfazGrafica.Paneles.Panel;
import InterfazGrafica.Paneles.PanelGestionAnalisisLaboratorio;
import InterfazGrafica.Paneles.PanelGestionOrdenesCompra;
import InterfazGrafica.TransferenciaInstancias;
import LogicaDeNegocio.AnalisisLaboratorio;
import LogicaDeNegocio.CriterioAnalisisLaboratorio;
import LogicaDeNegocio.Equipamiento;
import LogicaDeNegocio.ExcepcionCargaParametros;
import LogicaDeNegocio.Lote;
import LogicaDeNegocio.OrdenDeCompra;
import LogicaDeNegocio.OrdenDeProduccion;
import LogicaDeNegocio.Organizacion;
import LogicaDeNegocio.Proveedor;
import java.awt.Dimension;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Iterator;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.JCheckBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import org.jfree.chart.ChartPanel;

/**
 *
 * @author usuario
 */
public class SubPanelEstadisticaOrdenesDeCompra extends Panel implements TransferenciaInstancias {

    /**
     * Creates new form subPanelEstadisticaProveedores
     */
    
    
    public static final String[] criterios = PanelGestionOrdenesCompra.criterios;
    
    public SubPanelEstadisticaOrdenesDeCompra(JFrame ventanaContenedora, String trayectoriaActual, Organizacion unaOrganizacion, String tituloReporte) {
        super(ventanaContenedora, trayectoriaActual, unaOrganizacion, criterios, tituloReporte);
        initComponents();
        jPanel6.setLayout(new BoxLayout(jPanel6, BoxLayout.Y_AXIS));
        this.setVisible(true);

        
        
    }

    public SubPanelEstadisticaOrdenesDeCompra() {
        initComponents();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jCBCriterio1 = new javax.swing.JCheckBox();
        jCBCriterio3 = new javax.swing.JCheckBox();
        jButton2 = new javax.swing.JButton();
        datoCriterio3 = new javax.swing.JComboBox<>();
        jCBCriterio4 = new javax.swing.JCheckBox();
        jCBCriterio2 = new javax.swing.JCheckBox();
        jLEstatico1Criterio4 = new javax.swing.JLabel();
        dato1Criterio4 = new com.toedter.calendar.JDateChooser();
        jLEstatico2Criterio4 = new javax.swing.JLabel();
        dato2Criterio4 = new com.toedter.calendar.JDateChooser();
        botonCriterio2 = new javax.swing.JButton();
        botonCriterio1 = new javax.swing.JButton();
        jLEstaticoCriterio1 = new javax.swing.JLabel();
        jLCriterio1 = new javax.swing.JLabel();
        jLEstaticoCriterio2 = new javax.swing.JLabel();
        jLCriterio2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 204));

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Estadísticas generales de las ordenes de compra");

        jLabel5.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Distribución de frecuencia de las compras realizadas");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 586, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 482, Short.MAX_VALUE)
        );

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLabel3.setText("Criterios de consulta");

        jCBCriterio1.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jCBCriterio1.setText("Orden de Produccion asociada");
        jCBCriterio1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCBCriterio1ItemStateChanged(evt);
            }
        });

        jCBCriterio3.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jCBCriterio3.setText("Estado");
        jCBCriterio3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCBCriterio3ItemStateChanged(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jButton2.setText("Generar estadística");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        datoCriterio3.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        datoCriterio3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "Regular", "Anulado" }));
        datoCriterio3.setEnabled(false);

        jCBCriterio4.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jCBCriterio4.setText("Fecha de Origen");
        jCBCriterio4.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCBCriterio4ItemStateChanged(evt);
            }
        });

        jCBCriterio2.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jCBCriterio2.setText("Proveedor asociado");
        jCBCriterio2.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/InterfazGrafica/Assets/CheckTic.png"))); // NOI18N
        jCBCriterio2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCBCriterio2ItemStateChanged(evt);
            }
        });

        jLEstatico1Criterio4.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLEstatico1Criterio4.setText("Desde");
        jLEstatico1Criterio4.setEnabled(false);

        dato1Criterio4.setEnabled(false);
        dato1Criterio4.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N

        jLEstatico2Criterio4.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLEstatico2Criterio4.setText("Hasta");
        jLEstatico2Criterio4.setEnabled(false);

        dato2Criterio4.setEnabled(false);
        dato2Criterio4.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N

        botonCriterio2.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        botonCriterio2.setText("Buscar un Proveedor");
        botonCriterio2.setEnabled(false);
        botonCriterio2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCriterio2ActionPerformed(evt);
            }
        });

        botonCriterio1.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        botonCriterio1.setText("Buscar una Orden de Produccion");
        botonCriterio1.setEnabled(false);
        botonCriterio1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCriterio1ActionPerformed(evt);
            }
        });

        jLEstaticoCriterio1.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLEstaticoCriterio1.setText("ID orden seleccionada");

        jLCriterio1.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N

        jLEstaticoCriterio2.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLEstaticoCriterio2.setText("Proveedor seleccionado:");

        jLCriterio2.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jCBCriterio1)
                        .addGap(18, 18, 18)
                        .addComponent(botonCriterio1))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLEstaticoCriterio1)
                        .addGap(18, 18, 18)
                        .addComponent(jLCriterio1, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jCBCriterio2)
                        .addGap(18, 18, 18)
                        .addComponent(botonCriterio2))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLEstaticoCriterio2)
                        .addGap(18, 18, 18)
                        .addComponent(jLCriterio2, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jCBCriterio4)
                        .addGap(18, 18, 18)
                        .addComponent(jLEstatico1Criterio4)
                        .addGap(6, 6, 6)
                        .addComponent(dato1Criterio4, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLEstatico2Criterio4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dato2Criterio4, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jCBCriterio3)
                        .addGap(18, 18, 18)
                        .addComponent(datoCriterio3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(18, 18, 18))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCBCriterio1)
                    .addComponent(botonCriterio1))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLEstaticoCriterio1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLCriterio1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCBCriterio2)
                    .addComponent(botonCriterio2))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLEstaticoCriterio2)
                    .addComponent(jLCriterio2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCBCriterio3)
                    .addComponent(datoCriterio3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jCBCriterio4)
                    .addComponent(jLEstatico1Criterio4)
                    .addComponent(jLEstatico2Criterio4)
                    .addComponent(dato1Criterio4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dato2Criterio4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(664, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(30, 30, 30)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jCBCriterio1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCBCriterio1ItemStateChanged
        botonCriterio1.setEnabled(true);
        jLEstaticoCriterio1.setEnabled(jCBCriterio1.isSelected());
        jLCriterio1.setEnabled(jCBCriterio1.isSelected());
        asignarCriterio(0, (JCheckBox) evt.getSource());
    }//GEN-LAST:event_jCBCriterio1ItemStateChanged

    private void jCBCriterio3ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCBCriterio3ItemStateChanged
        datoCriterio3.setEnabled(jCBCriterio3.isSelected());
        asignarCriterio(2, (JCheckBox) evt.getSource());
    }//GEN-LAST:event_jCBCriterio3ItemStateChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            
            generarObjetos();
            ArrayList listaFiltrada = new ArrayList();
            listaFiltrada = (this.organizacion.filtrarGenerico(this.criterios, this.criteriosSeleccionados, this.objetosAsociadosACriterios, (Map)organizacion.getOrdenesCompra()));
            jPanel6.removeAll();
            generarLineas(listaFiltrada, dato1Criterio4.getCalendar(), dato2Criterio4.getCalendar());
        } catch (ExcepcionCargaParametros ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jCBCriterio4ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCBCriterio4ItemStateChanged
        jLEstatico1Criterio4.setEnabled(jCBCriterio4.isSelected());
        dato1Criterio4.setEnabled(jCBCriterio4.isSelected());
        jLEstatico2Criterio4.setEnabled(jCBCriterio4.isSelected());
        dato2Criterio4.setEnabled(jCBCriterio4.isSelected());
        //criteriosSeleccionados.put(criterio4, jCBCriterio4.isSelected());
        asignarCriterio(3, (JCheckBox) evt.getSource());
    }//GEN-LAST:event_jCBCriterio4ItemStateChanged

    private void jCBCriterio2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCBCriterio2ItemStateChanged
        botonCriterio2.setEnabled(jCBCriterio2.isSelected());
        jLEstaticoCriterio2.setEnabled(jCBCriterio2.isSelected());
        jLCriterio2.setEnabled(jCBCriterio2.isSelected());
        //criteriosSeleccionados.put(criterio2, jCBCriterio2.isSelected());
        asignarCriterio(1, (JCheckBox) evt.getSource());
    }//GEN-LAST:event_jCBCriterio2ItemStateChanged

    private void botonCriterio2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCriterio2ActionPerformed
        BuscarProveedor unaVentana = new BuscarProveedor(this.organizacion, ventanaContenedora, this.trayectoriaActual);
        ventanaContenedora.dispose();
    }//GEN-LAST:event_botonCriterio2ActionPerformed

    private void botonCriterio1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCriterio1ActionPerformed
        BuscarOrdenDeProduccion unaVentana = new BuscarOrdenDeProduccion(this.organizacion, ventanaContenedora, this.trayectoriaActual);
        ventanaContenedora.dispose();
    }//GEN-LAST:event_botonCriterio1ActionPerformed

    @Override
    protected void generarObjetos() {
        asignarObjetoACriterio(2, datoCriterio3.getSelectedItem());
        asignarObjetoACriterio(3, generarListaFecha(dato1Criterio4.getCalendar(), dato2Criterio4.getCalendar()));
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonCriterio1;
    private javax.swing.JButton botonCriterio2;
    private javax.swing.ButtonGroup buttonGroup1;
    private com.toedter.calendar.JDateChooser dato1Criterio4;
    private com.toedter.calendar.JDateChooser dato2Criterio4;
    private javax.swing.JComboBox<String> datoCriterio3;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCBCriterio1;
    private javax.swing.JCheckBox jCBCriterio2;
    private javax.swing.JCheckBox jCBCriterio3;
    private javax.swing.JCheckBox jCBCriterio4;
    private javax.swing.JLabel jLCriterio1;
    private javax.swing.JLabel jLCriterio2;
    private javax.swing.JLabel jLEstatico1Criterio4;
    private javax.swing.JLabel jLEstatico2Criterio4;
    private javax.swing.JLabel jLEstaticoCriterio1;
    private javax.swing.JLabel jLEstaticoCriterio2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    // End of variables declaration//GEN-END:variables



    @Override
    public void actualizarUnObjeto(Object unObjeto) {
        if (unObjeto instanceof OrdenDeProduccion){
            asignarObjetoACriterio(0, unObjeto);
            OrdenDeProduccion unaOrdenProduccion = (OrdenDeProduccion) unObjeto;
            jLEstaticoCriterio1.setEnabled(true);
            jLCriterio1.setEnabled(true);
            jLCriterio1.setText(""+unaOrdenProduccion.getId());
        }
        if (unObjeto instanceof Proveedor){
            asignarObjetoACriterio(1, unObjeto);
            Proveedor unProveedor = (Proveedor) unObjeto;
            jLEstaticoCriterio2.setEnabled(true);
            jLCriterio2.setEnabled(true);
            jLCriterio2.setText(""+unProveedor.getCuit());
        }
    }

    
    
    private void agregarPanelAtributoCualitativo(String unAtributoCualitativo, ChartPanel unPanelJFreeChart){
        
        JLabel unaEtiqueta = new javax.swing.JLabel();;
        unaEtiqueta.setFont(new java.awt.Font("Dialog", 0, 24)); 
        unaEtiqueta.setText("Distribución de frecuencia observada de "+unAtributoCualitativo);
        jPanel6.add(unaEtiqueta);
        jPanel6.add(Box.createRigidArea(new Dimension(0,5)));
        JPanel unPanel = new JPanel();
        unPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        //javax.swing.GroupLayout unPanelLayout = new javax.swing.GroupLayout(unPanel);
        
        Estadistica.agregarChartPanel(unPanel, unPanelJFreeChart);
        jPanel6.add(unPanel);
        jPanel6.add(Box.createRigidArea(new Dimension(0,5)));
        unPanel.setVisible(true);
    }

    private void generarLineas(ArrayList unaLista, Calendar fechaLimiteInferior, Calendar fechaLimiteSuperior) throws ExcepcionCargaParametros {
        
        if (unaLista == null || fechaLimiteInferior == null || fechaLimiteSuperior == null)
            throw new ExcepcionCargaParametros("Revise los datos ingresados.");
        long diasDeDiferencia = Organizacion.calcularCantidadDiasDiferencia(fechaLimiteInferior, fechaLimiteSuperior);
        if (diasDeDiferencia <= 0){
            throw new ExcepcionCargaParametros("La cantidad de días a censar tiene que ser mayor a 0 (Cero)");
        }
        if (diasDeDiferencia > 730)
            throw new ExcepcionCargaParametros("La cantidad de dias de diferencia no puede ser mayor a 2 años");
        Calendar[] calendarios = new Calendar[(int)diasDeDiferencia];
        for (int i = 0; i<diasDeDiferencia; i++){
            calendarios[i]= (Calendar) fechaLimiteInferior.clone();
            calendarios[i].add(Calendar.DATE, i);
        }
        Iterator ordenesDeCompra = unaLista.iterator();
        Float[][] datosPorDia = new Float[(int)diasDeDiferencia][3];
        
        while (ordenesDeCompra.hasNext()){
            OrdenDeCompra unaOrden = (OrdenDeCompra) ordenesDeCompra.next();
            Calendar unaFecha = unaOrden.getFechaOrigenC();
            //Calcular la diferencia de dias
            long diferenciaDias = Organizacion.calcularCantidadDiasDiferencia(fechaLimiteInferior, unaFecha);
            int dias = (int) diferenciaDias;
            //System.out.println("diferencia de dias: "+dias);
            System.out.println("dias de diferencia: "+dias);
            switch (unaOrden.getTipoLote()){
                case Lote.TIPO_LOTE_YERBA_CANCHADA_VERDE:
                    if (datosPorDia[dias][0] == null)
                        datosPorDia[dias][0] = 0f;
                    datosPorDia[dias][0] = datosPorDia[dias][0] + Organizacion.convertirUnidadPeso(unaOrden.getUnidadDeMedida(), unaOrden.getCantidadAComprar(), Lote.UNIDAD_MEDIDA_KILOGRAMO);
                    System.out.println("datosPorDia ["+dias+"][0] comprada: "+datosPorDia[dias][0]);
                    break;
                case Lote.TIPO_LOTE_YERBA_CANCHADA_ESTACIONADA:
                    if (datosPorDia[dias][1] == null)
                        datosPorDia[dias][1] = 0f;
                    datosPorDia[dias][1] = datosPorDia[dias][1] + Organizacion.convertirUnidadPeso(unaOrden.getUnidadDeMedida(), unaOrden.getCantidadAComprar(), Lote.UNIDAD_MEDIDA_KILOGRAMO);
                    System.out.println("datosPorDia ["+dias+"][1] comprada: "+datosPorDia[dias][1]);
                    break;
                case Lote.TIPO_LOTE_YERBA_CANCHADA_MOLIDA:
                    if (datosPorDia[dias][2] == null)
                        datosPorDia[dias][2] = 0f;
                    datosPorDia[dias][2] = datosPorDia[dias][2] + Organizacion.convertirUnidadPeso(unaOrden.getUnidadDeMedida(), unaOrden.getCantidadAComprar(), Lote.UNIDAD_MEDIDA_KILOGRAMO);
                    System.out.println("datosPorDia ["+dias+"][2] comprada: "+datosPorDia[dias][2]);
                    break;
            }
        }
        for (int i = 0; i<diasDeDiferencia;i++){
            if (datosPorDia[i][0] == null)
                datosPorDia[i][0]= 0f;
            if (datosPorDia[i][1] == null)
                datosPorDia[i][1]= 0f;
            if (datosPorDia[i][2] == null)
                datosPorDia[i][2]= 0f;
        }
        ChartPanel unGrafico = Estadistica.generarGraficoLineasFechas(tituloReporte, "Tiempo", "Cantidad existente", calendarios, datosPorDia, Lote.TIPO_LOTES, 1.5f);
        agregarPanelAtributoCualitativo("Cantidad de Yerba comprada", unGrafico);
        
        
    }
}
