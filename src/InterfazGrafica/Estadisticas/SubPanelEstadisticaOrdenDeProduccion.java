/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package InterfazGrafica.Estadisticas;

import InterfazGrafica.Busqueda.BuscarOrdenDeProduccion;
import InterfazGrafica.Paneles.Panel;
import InterfazGrafica.TransferenciaInstancias;
import InterfazGrafica.UtilidadesInterfazGrafica;
import LogicaDeNegocio.AnalisisLaboratorio;
import LogicaDeNegocio.Equipamiento;
import LogicaDeNegocio.ExcepcionCargaParametros;
import LogicaDeNegocio.Lote;
import LogicaDeNegocio.OrdenDeProduccion;
import LogicaDeNegocio.Organizacion;
import java.awt.Dimension;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import org.jfree.chart.ChartPanel;

/**
 *
 * @author usuario
 */
public class SubPanelEstadisticaOrdenDeProduccion extends Panel implements TransferenciaInstancias {

    /**
     * Creates new form subPanelEstadisticaProveedores
     */
    
    private OrdenDeProduccion unaOrdenDeProduccionSeleccionada;
    
    public static final String[] criterios = {"Un equipamiento", "Fecha de origen"};
    
    public SubPanelEstadisticaOrdenDeProduccion(JFrame ventanaContenedora, String trayectoriaActual, Organizacion unaOrganizacion, String tituloReporte) {
        super(ventanaContenedora, trayectoriaActual, unaOrganizacion, criterios, tituloReporte);
        initComponents();
        jPanel6.setLayout(new BoxLayout(jPanel6, BoxLayout.Y_AXIS));
        this.setVisible(true);

        
        
    }

    public SubPanelEstadisticaOrdenDeProduccion() {
        initComponents();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLEstaticoTamanoMuestra = new javax.swing.JLabel();
        jLEstaticoTamanoMuestra1 = new javax.swing.JLabel();
        jBBuscarDestino = new javax.swing.JButton();
        jLStaticEtiqueta1 = new javax.swing.JLabel();
        jLStaticEtiqueta2 = new javax.swing.JLabel();
        jLStaticEtiqueta3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 204));

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Estadísticas generales de un equipamiento");

        jPanel1.setBackground(new java.awt.Color(201, 201, 201));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 833, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 624, Short.MAX_VALUE)
        );

        jLabel5.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Información del estado actual de la orden de producción.");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 885, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 482, Short.MAX_VALUE)
        );

        jLEstaticoTamanoMuestra.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLEstaticoTamanoMuestra.setText("Cantidad total estipulada a producir");

        jLEstaticoTamanoMuestra1.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLEstaticoTamanoMuestra1.setText("##");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLEstaticoTamanoMuestra)
                        .addGap(18, 18, 18)
                        .addComponent(jLEstaticoTamanoMuestra1))
                    .addComponent(jLabel5)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(584, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLEstaticoTamanoMuestra)
                    .addComponent(jLEstaticoTamanoMuestra1))
                .addGap(22, 22, 22)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 18, Short.MAX_VALUE))
        );

        jBBuscarDestino.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jBBuscarDestino.setText("Buscar una orden de producción");
        jBBuscarDestino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBuscarDestinoActionPerformed(evt);
            }
        });

        jLStaticEtiqueta1.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLStaticEtiqueta1.setText("Equipamiento a censar");

        jLStaticEtiqueta2.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLStaticEtiqueta2.setText("Orden de producción seleccionada:");

        jLStaticEtiqueta3.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLStaticEtiqueta3.setText("una orden de producción");

        jButton1.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jButton1.setText("generar estadística");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLStaticEtiqueta2)
                                .addGap(18, 18, 18)
                                .addComponent(jLStaticEtiqueta3))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLStaticEtiqueta1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jBBuscarDestino)))
                        .addContainerGap(835, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLStaticEtiqueta1)
                    .addComponent(jBBuscarDestino))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLStaticEtiqueta2)
                    .addComponent(jLStaticEtiqueta3))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jBBuscarDestinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBuscarDestinoActionPerformed
        //this.ObjetoABuscar = "Equipamiento Origen";
        BuscarOrdenDeProduccion unaVentana = new BuscarOrdenDeProduccion(this.organizacion, ventanaContenedora, this.trayectoriaActual);
        ventanaContenedora.dispose();
    }//GEN-LAST:event_jBBuscarDestinoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            if (unaOrdenDeProduccionSeleccionada == null)
                throw new ExcepcionCargaParametros("No se ingreso una orden de producción para generar sus estadísticas.");
            generarGraficoProgresoActual();
            jLEstaticoTamanoMuestra1.setText(UtilidadesInterfazGrafica.formatearFlotante(unaOrdenDeProduccionSeleccionada.getCantidadAProducir())+" kg(s)");
        } catch (ExcepcionCargaParametros ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    @Override
    protected void generarObjetos() {
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jBBuscarDestino;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLEstaticoTamanoMuestra;
    private javax.swing.JLabel jLEstaticoTamanoMuestra1;
    private javax.swing.JLabel jLStaticEtiqueta1;
    private javax.swing.JLabel jLStaticEtiqueta2;
    private javax.swing.JLabel jLStaticEtiqueta3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel6;
    // End of variables declaration//GEN-END:variables



    @Override
    public void actualizarUnObjeto(Object unObjeto) {
        if (unObjeto instanceof OrdenDeProduccion){
            OrdenDeProduccion unaOrdenProduccion = (OrdenDeProduccion) unObjeto;
            this.unaOrdenDeProduccionSeleccionada = unaOrdenProduccion;
            exhibirOrdenDeProduccion();
        }
    }


    

    private void generarBarras(ArrayList listaObservada) throws ExcepcionCargaParametros {
        if (listaObservada == null || listaObservada.isEmpty())
            throw new ExcepcionCargaParametros("No existen análisis de laboratorio con los criterios ingresados.");
        jPanel6.removeAll();
        Iterator analisis = listaObservada.iterator();
        Object[][] cantidadVecesSubAtributosAvistados = new Object[AnalisisLaboratorio.ATRIBUTOS.length][];
        while (analisis.hasNext()){
            AnalisisLaboratorio unAnalisis = (AnalisisLaboratorio) analisis.next();
            for (int i = 0; i < AnalisisLaboratorio.ATRIBUTOS.length; i++){
                String unAtributo = AnalisisLaboratorio.ATRIBUTOS[i];
                for (int j = 0; j < AnalisisLaboratorio.SUB_ATRIBUTOS[i].length; j++){
                    String unSubAtributo = AnalisisLaboratorio.SUB_ATRIBUTOS[i][j];
                    if (cantidadVecesSubAtributosAvistados[i] == null)
                        cantidadVecesSubAtributosAvistados[i] = new Float[AnalisisLaboratorio.SUB_ATRIBUTOS[i].length];
                    if (cantidadVecesSubAtributosAvistados[i][j] == null)
                        cantidadVecesSubAtributosAvistados[i][j] = 0f;
                    cantidadVecesSubAtributosAvistados[i][j] = (Float)cantidadVecesSubAtributosAvistados[i][j] + unAnalisis.getValorUnAtributo(unAtributo, unSubAtributo);
                }
            }
        }
        for (int i = 0; i < AnalisisLaboratorio.ATRIBUTOS.length; i++){
            String unAtributo = AnalisisLaboratorio.ATRIBUTOS[i];
            ChartPanel unGrafico = Estadistica.generarGraficoBarras(unAtributo, "Categoría", "Frecuencia observada", (Float[]) cantidadVecesSubAtributosAvistados[i], AnalisisLaboratorio.SUB_ATRIBUTOS[i], 0.75f);
            agregarPanelAtributoCualitativo(AnalisisLaboratorio.ATRIBUTOS[i], unGrafico);
        }
//        Estadistica.agregarChartPanel(jPanel4, Estadistica.generarGraficoBarras("Distribucion de variables cualitativas de análisis", "Categorias","Frecuencia",datosObservados, atributos, subAtributos, 1.5f));
        
        
    }
    
    
    private void agregarPanelAtributoCualitativo(String unAtributoCualitativo, ChartPanel unPanelJFreeChart){
        
        JLabel unaEtiqueta = new javax.swing.JLabel();;
        unaEtiqueta.setFont(new java.awt.Font("Dialog", 0, 24)); 
        unaEtiqueta.setText("Distribución de frecuencia observada de "+unAtributoCualitativo);
        jPanel6.add(unaEtiqueta);
        jPanel6.add(Box.createRigidArea(new Dimension(0,5)));
        JPanel unPanel = new JPanel();
        unPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        //javax.swing.GroupLayout unPanelLayout = new javax.swing.GroupLayout(unPanel);
        
        Estadistica.agregarChartPanel(unPanel, unPanelJFreeChart);
        jPanel6.add(unPanel);
        jPanel6.add(Box.createRigidArea(new Dimension(0,5)));
        unPanel.setVisible(true);
    }
    
    private void exhibirOrdenDeProduccion() {
        jLStaticEtiqueta3.setText(""+unaOrdenDeProduccionSeleccionada.getId());
        //jLStaticEtiqueta5.setText(unEquipamientoSeleccionado.getBasculaAsociada().getNombre());
    }

    private void generarGraficoProgresoActual() {
        try {
            
            Float progresoTotalEstacionamiento = unaOrdenDeProduccionSeleccionada.calcularTotalEstacionadoKgs();
            Float progresoTotalMolienda = unaOrdenDeProduccionSeleccionada.calcularTotalMolidoKgs();
            Float progresoTotalComprado = unaOrdenDeProduccionSeleccionada.getPesoRestanteAComprar();
            Float progresoTotalEgresado = unaOrdenDeProduccionSeleccionada.calcularPesoEgresadoKgs();
            Map <String, Float> partes = new HashMap<String, Float>();
            partes.put("Cantidad total a comprar", progresoTotalComprado);
            partes.put("Cantidad total estacionada", progresoTotalEstacionamiento);
            partes.put("Cantidad total molida", progresoTotalMolienda);
            partes.put("Cantidad total egresada", progresoTotalEgresado);
            ChartPanel unChartPanel = Estadistica.generarPanelGraficoTortaFlotante(partes, "Progreso de orden de producción", 1.5f, "Kg(s)");
            Estadistica.agregarChartPanel(jPanel1, unChartPanel);
        } catch (ExcepcionCargaParametros ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
        
        
    }
    
    

    private void agregarPanel(String unAtributoCualitativo, ChartPanel unPanelJFreeChart) {
        JLabel unaEtiqueta = new javax.swing.JLabel();;
        unaEtiqueta.setFont(new java.awt.Font("Dialog", 0, 24)); 
        unaEtiqueta.setText("Distribución de frecuencia observada de "+unAtributoCualitativo);
        jPanel6.add(unaEtiqueta);
        jPanel6.add(Box.createRigidArea(new Dimension(0,5)));
        JPanel unPanel = new JPanel();
        unPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        //javax.swing.GroupLayout unPanelLayout = new javax.swing.GroupLayout(unPanel);
        
        Estadistica.agregarChartPanel(unPanel, unPanelJFreeChart);
        jPanel6.add(unPanel);
        jPanel6.add(Box.createRigidArea(new Dimension(0,5)));
        unPanel.setVisible(true);
    }
    private void generarLineas(Equipamiento unEquipamiento, Calendar fechaLimiteInferior, Calendar fechaLimiteSuperior) throws ExcepcionCargaParametros {
        
        if (unEquipamiento == null || fechaLimiteInferior == null || fechaLimiteSuperior == null)
            throw new ExcepcionCargaParametros("Revise los datos ingresados.");
        jPanel6.removeAll();
        long diasDeDiferencia = Organizacion.calcularCantidadDiasDiferencia(fechaLimiteInferior, fechaLimiteSuperior);
        if (diasDeDiferencia <= 0){
            throw new ExcepcionCargaParametros("La cantidad de días a censar tiene que ser mayor a 0 (Cero)");
        }
        Calendar[] calendarios = new Calendar[(int)diasDeDiferencia];
        for (int i = 0; i<diasDeDiferencia; i++){
            calendarios[i]= (Calendar) fechaLimiteInferior.clone();
            calendarios[i].add(Calendar.DATE, i);
        }
        Float[][] datosPorDia = unEquipamiento.getCantidadAvistamientos(fechaLimiteInferior, fechaLimiteSuperior);
        //Necesito titulo, titulo eje x, titulo eje y, CALENDARIO[] de fechas, FLOAT[][] de datosOBSERVADOS, String[] de atributos, y un escalar.
        ChartPanel unGrafico = Estadistica.generarGraficoLineasFechas(tituloReporte, "Tiempo", "Cantidad existente", calendarios, datosPorDia, Lote.TIPO_LOTES, 1f);
        agregarPanelAtributoCualitativo("Cantidad de Yerba", unGrafico);
        /*String[] dias = new String[(int)diasDeDiferencia];
        for (int i = 0; i < Lote.TIPO_LOTES.length; i++){
            String unAtributo = Lote.TIPO_LOTES[i];
            ChartPanel unGrafico = Estadistica.generarGraficoLineas(unAtributo, "Tipos de Yerba", "Cantidad existente", (Float[]) datosPorDia[i], dias, 0.75f);
            agregarPanelAtributoCualitativo(Lote.TIPO_LOTES[i], unGrafico);
        }*/
    }      
}
