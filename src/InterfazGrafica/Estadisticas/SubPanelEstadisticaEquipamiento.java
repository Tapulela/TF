/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package InterfazGrafica.Estadisticas;

import InterfazGrafica.Busqueda.BuscarEquipamiento;
import InterfazGrafica.Paneles.Panel;
import InterfazGrafica.TransferenciaInstancias;
import InterfazGrafica.UtilidadesInterfazGrafica;
import LogicaDeNegocio.AnalisisLaboratorio;
import LogicaDeNegocio.Bascula;
import LogicaDeNegocio.Equipamiento;
import LogicaDeNegocio.ExcepcionCargaParametros;
import LogicaDeNegocio.Lote;
import LogicaDeNegocio.Organizacion;
import Reportes.GeneradorDeReportes;
import java.awt.Dimension;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import net.sf.jasperreports.engine.JRException;
import org.jfree.chart.ChartPanel;

/**
 *
 * @author usuario
 */
public class SubPanelEstadisticaEquipamiento extends Panel implements TransferenciaInstancias {

    /**
     * Creates new form subPanelEstadisticaProveedores
     */
    
    private Equipamiento unEquipamientoSeleccionado;
    
    public static final String[] criterios = {"Un equipamiento", "Fecha de origen"};
    
    public SubPanelEstadisticaEquipamiento(JFrame ventanaContenedora, String trayectoriaActual, Organizacion unaOrganizacion, String tituloReporte) {
        super(ventanaContenedora, trayectoriaActual, unaOrganizacion, criterios, tituloReporte);
        initComponents();
        jPanel6.setLayout(new BoxLayout(jPanel6, BoxLayout.Y_AXIS));
        this.setVisible(true);

        
        
    }

    public SubPanelEstadisticaEquipamiento() {
        initComponents();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLEstaticoTamanoMuestra = new javax.swing.JLabel();
        jLEstaticoTamanoMuestra1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLEstatico1Criterio6 = new javax.swing.JLabel();
        dato1Criterio2 = new com.toedter.calendar.JDateChooser();
        jLEstatico2Criterio6 = new javax.swing.JLabel();
        dato2Criterio2 = new com.toedter.calendar.JDateChooser();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jBBuscarDestino = new javax.swing.JButton();
        jLStaticEtiqueta1 = new javax.swing.JLabel();
        jLStaticEtiqueta2 = new javax.swing.JLabel();
        jLStaticEtiqueta3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 204));

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Estadísticas generales de un equipamiento");

        jPanel1.setBackground(new java.awt.Color(201, 201, 201));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 833, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 624, Short.MAX_VALUE)
        );

        jLabel5.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Información del estado actual del equipamiento.");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 482, Short.MAX_VALUE)
        );

        jLEstaticoTamanoMuestra.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLEstaticoTamanoMuestra.setText("Capacidad máxima del equipamiento:");

        jLEstaticoTamanoMuestra1.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLEstaticoTamanoMuestra1.setText("##");

        jLabel7.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Intervalo de fechas a analizar");

        jLabel6.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Estadísticas personalizadas");

        jLEstatico1Criterio6.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLEstatico1Criterio6.setText("Desde");

        dato1Criterio2.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N

        jLEstatico2Criterio6.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLEstatico2Criterio6.setText("Hasta");

        dato2Criterio2.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N

        jButton2.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jButton2.setText("Generar estadística");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jButton4.setText("Generar reporte");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel7)
                            .addGap(18, 18, 18)
                            .addComponent(jLEstatico1Criterio6)
                            .addGap(18, 18, 18)
                            .addComponent(dato1Criterio2, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jLEstatico2Criterio6)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(dato2Criterio2, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 31, Short.MAX_VALUE))
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGap(0, 0, Short.MAX_VALUE)
                            .addComponent(jButton2)
                            .addGap(18, 18, 18)
                            .addComponent(jButton4))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(jLEstatico1Criterio6)
                        .addComponent(dato1Criterio2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLEstatico2Criterio6)
                        .addComponent(dato2Criterio2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton4))
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLEstaticoTamanoMuestra)
                        .addGap(18, 18, 18)
                        .addComponent(jLEstaticoTamanoMuestra1))
                    .addComponent(jLabel5)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(573, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLEstaticoTamanoMuestra)
                    .addComponent(jLEstaticoTamanoMuestra1))
                .addGap(22, 22, 22)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 18, Short.MAX_VALUE))
        );

        jBBuscarDestino.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jBBuscarDestino.setText("Buscar un Equipamiento");
        jBBuscarDestino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBuscarDestinoActionPerformed(evt);
            }
        });

        jLStaticEtiqueta1.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLStaticEtiqueta1.setText("Equipamiento a censar");

        jLStaticEtiqueta2.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLStaticEtiqueta2.setText("Equipamiento seleccionado");

        jLStaticEtiqueta3.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLStaticEtiqueta3.setText("un equipamiento");

        jButton1.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jButton1.setText("Generar estadística");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jButton3.setText("Generar reporte");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLStaticEtiqueta2)
                                .addGap(18, 18, 18)
                                .addComponent(jLStaticEtiqueta3))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLStaticEtiqueta1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jBBuscarDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(941, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLStaticEtiqueta1)
                    .addComponent(jBBuscarDestino))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLStaticEtiqueta2)
                    .addComponent(jLStaticEtiqueta3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton3))
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jBBuscarDestinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBuscarDestinoActionPerformed
        //this.ObjetoABuscar = "Equipamiento Origen";
        BuscarEquipamiento unaVentana = new BuscarEquipamiento(this.organizacion, ventanaContenedora, this.trayectoriaActual);
        ventanaContenedora.dispose();
    }//GEN-LAST:event_jBBuscarDestinoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            if (unEquipamientoSeleccionado == null)
                throw new ExcepcionCargaParametros("No se ingreso un equipamiento para generar sus estadísticas.");
            generarGraficoTortaExistenciaActual();
            jLEstaticoTamanoMuestra1.setText(UtilidadesInterfazGrafica.formatearFlotante(unEquipamientoSeleccionado.getCapacidadMaxima())+" kg(s)");
        } catch (ExcepcionCargaParametros ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            //ArrayList listaFiltradaMovimientos = new ArrayList();
            if (unEquipamientoSeleccionado == null)
                throw new ExcepcionCargaParametros("Debe seleccionar un equipamiento para generar la estadística");
            generarObjetos();
            //listaFiltradaMovimientos = (this.organizacion.filtrarGenerico(criterios, this.criteriosSeleccionados, this.objetosAsociadosACriterios, (Map) organizacion.getMovimientos()));
            generarLineasUnEquipamiento(unEquipamientoSeleccionado, dato1Criterio2.getCalendar(), dato2Criterio2.getCalendar());
            //ChartPanel unGrafico = Estadistica.generarGraficoLineas(unAtributo, "Categoría", "Frecuencia observada", (Float[]) cantidadVecesSubAtributosAvistados[i], AnalisisLaboratorio.SUB_ATRIBUTOS[i], 0.75f);        
        } catch (ExcepcionCargaParametros ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            if (unEquipamientoSeleccionado == null)
                throw new ExcepcionCargaParametros("No se ingreso un equipamiento para generar sus estadísticas.");
            Map<String, String> criterios = new HashMap<String, String>();
            Map<String, Boolean> criterioss = new HashMap<String, Boolean>();
            ArrayList unaLista = Estadistica.generarTuplasEstadisticaEquipamiento(unEquipamientoSeleccionado);
            GeneradorDeReportes.generarReporteGenericoEstadistica("Equipamiento", criterioss, criterios, unaLista, organizacion.getUsuarioActivo().getNombre()+" "+organizacion.getUsuarioActivo().getApellido());
        } catch (ExcepcionCargaParametros ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        } catch (JRException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            if (unEquipamientoSeleccionado == null || dato1Criterio2.getCalendar() == null || dato2Criterio2.getCalendar() == null)
                throw new ExcepcionCargaParametros("Revise los datos ingresados.");
            Map<String, String> criterios = new HashMap<String, String>();
            Map<String, Boolean> criterioss = new HashMap<String, Boolean>();
            ArrayList unaLista = Estadistica.generarTuplaEquipamientoConLineas(unEquipamientoSeleccionado, dato1Criterio2.getCalendar(),  dato2Criterio2.getCalendar());
            GeneradorDeReportes.generarReporteGenericoEstadistica("Equipamiento", criterioss, criterios, unaLista, organizacion.getUsuarioActivo().getNombre()+" "+organizacion.getUsuarioActivo().getApellido());
            
        } catch (ExcepcionCargaParametros ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        } catch (JRException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    @Override
    protected void generarObjetos() {
        asignarObjetoACriterio(1, generarListaFecha(dato1Criterio2.getCalendar(), dato2Criterio2.getCalendar()));
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private com.toedter.calendar.JDateChooser dato1Criterio2;
    private com.toedter.calendar.JDateChooser dato2Criterio2;
    private javax.swing.JButton jBBuscarDestino;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLEstatico1Criterio6;
    private javax.swing.JLabel jLEstatico2Criterio6;
    private javax.swing.JLabel jLEstaticoTamanoMuestra;
    private javax.swing.JLabel jLEstaticoTamanoMuestra1;
    private javax.swing.JLabel jLStaticEtiqueta1;
    private javax.swing.JLabel jLStaticEtiqueta2;
    private javax.swing.JLabel jLStaticEtiqueta3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    // End of variables declaration//GEN-END:variables



    @Override
    public void actualizarUnObjeto(Object unObjeto) {
        if (unObjeto instanceof Equipamiento){
            try {
                if (unObjeto instanceof Bascula)
                    throw new ExcepcionCargaParametros("No se puede seleccionar una bascula como destino");
                this.unEquipamientoSeleccionado = (Equipamiento) unObjeto;
                exhibirEquipamiento();
            } catch (ExcepcionCargaParametros ex) {
                JOptionPane.showMessageDialog(null,ex.getMessage());
                return;
            }
        }
    }

    private void generarBarra() {
    }

    

    private void generarBarras(ArrayList listaObservada) throws ExcepcionCargaParametros {
        if (listaObservada == null || listaObservada.isEmpty())
            throw new ExcepcionCargaParametros("No existen análisis de laboratorio con los criterios ingresados.");
        jPanel6.removeAll();
        Iterator analisis = listaObservada.iterator();
        Object[][] cantidadVecesSubAtributosAvistados = new Object[AnalisisLaboratorio.ATRIBUTOS.length][];
        while (analisis.hasNext()){
            AnalisisLaboratorio unAnalisis = (AnalisisLaboratorio) analisis.next();
            for (int i = 0; i < AnalisisLaboratorio.ATRIBUTOS.length; i++){
                String unAtributo = AnalisisLaboratorio.ATRIBUTOS[i];
                for (int j = 0; j < AnalisisLaboratorio.SUB_ATRIBUTOS[i].length; j++){
                    String unSubAtributo = AnalisisLaboratorio.SUB_ATRIBUTOS[i][j];
                    if (cantidadVecesSubAtributosAvistados[i] == null)
                        cantidadVecesSubAtributosAvistados[i] = new Float[AnalisisLaboratorio.SUB_ATRIBUTOS[i].length];
                    if (cantidadVecesSubAtributosAvistados[i][j] == null)
                        cantidadVecesSubAtributosAvistados[i][j] = 0f;
                    cantidadVecesSubAtributosAvistados[i][j] = (Float)cantidadVecesSubAtributosAvistados[i][j] + unAnalisis.getValorUnAtributo(unAtributo, unSubAtributo);
                }
            }
        }
        for (int i = 0; i < AnalisisLaboratorio.ATRIBUTOS.length; i++){
            String unAtributo = AnalisisLaboratorio.ATRIBUTOS[i];
            ChartPanel unGrafico = Estadistica.generarGraficoBarras(unAtributo, "Categoría", "Frecuencia observada", (Float[]) cantidadVecesSubAtributosAvistados[i], AnalisisLaboratorio.SUB_ATRIBUTOS[i], 0.75f);
            agregarPanelAtributoCualitativo(AnalisisLaboratorio.ATRIBUTOS[i], unGrafico);
        }
//        Estadistica.agregarChartPanel(jPanel4, Estadistica.generarGraficoBarras("Distribucion de variables cualitativas de análisis", "Categorias","Frecuencia",datosObservados, atributos, subAtributos, 1.5f));
        
        
    }
    
    
    private void agregarPanelAtributoCualitativo(String unAtributoCualitativo, ChartPanel unPanelJFreeChart){
        
        JLabel unaEtiqueta = new javax.swing.JLabel();;
        unaEtiqueta.setFont(new java.awt.Font("Dialog", 0, 24)); 
        unaEtiqueta.setText("Distribución de frecuencia observada de "+unAtributoCualitativo);
        jPanel6.add(unaEtiqueta);
        jPanel6.add(Box.createRigidArea(new Dimension(0,5)));
        JPanel unPanel = new JPanel();
        unPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        //javax.swing.GroupLayout unPanelLayout = new javax.swing.GroupLayout(unPanel);
        
        Estadistica.agregarChartPanel(unPanel, unPanelJFreeChart);
        jPanel6.add(unPanel);
        jPanel6.add(Box.createRigidArea(new Dimension(0,5)));
        unPanel.setVisible(true);
    }
    
    private void exhibirEquipamiento() {
        jLStaticEtiqueta3.setText(unEquipamientoSeleccionado.getNombre());
        //jLStaticEtiqueta5.setText(unEquipamientoSeleccionado.getBasculaAsociada().getNombre());
    }

    private void generarGraficoTortaExistenciaActual() {
        Float espacioTotal = unEquipamientoSeleccionado.getCapacidadMaxima();
        Float espacioTotalSinUtilizar;
        Float espacioTotalOcupadoYCV = unEquipamientoSeleccionado.getPesoTotalDeYCVKgV2();
        Float espacioTotalOcupadoYCE = unEquipamientoSeleccionado.getPesoTotalDeYCEKgV2();
        Float espacioTotalOcupadoYCM = unEquipamientoSeleccionado.getPesoTotalDeYCMKgV2();
        /*while (lotes.hasNext()){
            Lote unLote = (Lote) lotes.next();
            switch (unLote.getTipo_Lote()){
                case (Lote.TIPO_LOTE_YERBA_CANCHADA_VERDE):
                    espacioTotalOcupadoYCV += unLote.obtenerPesoIngresadoConPerdidasIncluidasKg();
                    break;
                case (Lote.TIPO_LOTE_YERBA_CANCHADA_ESTACIONADA):
                    espacioTotalOcupadoYCE += unLote.obtenerPesoIngresadoConPerdidasIncluidasKg();
                    break;
                case (Lote.TIPO_LOTE_YERBA_CANCHADA_MOLIDA):
                    espacioTotalOcupadoYCM += unLote.obtenerPesoIngresadoConPerdidasIncluidasKg();
                    break;
            }
        }*/
        espacioTotalSinUtilizar = Math.max(espacioTotal - espacioTotalOcupadoYCV - espacioTotalOcupadoYCE - espacioTotalOcupadoYCM,0);
        Map <String, Float> partes = new HashMap<String, Float>();
        partes.put(Lote.TIPO_LOTE_YERBA_CANCHADA_VERDE, espacioTotalOcupadoYCV);
        partes.put(Lote.TIPO_LOTE_YERBA_CANCHADA_ESTACIONADA, espacioTotalOcupadoYCE);        
        partes.put(Lote.TIPO_LOTE_YERBA_CANCHADA_MOLIDA, espacioTotalOcupadoYCM);
        partes.put("Espacio sin utilizar", espacioTotalSinUtilizar);
        ChartPanel unChartPanel = Estadistica.generarPanelGraficoTortaFlotante(partes, "Existencia actual en el equipamiento", 1.5f, "Kg(s)");
        Estadistica.agregarChartPanel(jPanel1, unChartPanel);
    }
    
    

    private void agregarPanel(String unAtributoCualitativo, ChartPanel unPanelJFreeChart) {
        JLabel unaEtiqueta = new javax.swing.JLabel();;
        unaEtiqueta.setFont(new java.awt.Font("Dialog", 0, 24)); 
        unaEtiqueta.setText("Distribución de frecuencia observada de "+unAtributoCualitativo);
        jPanel6.add(unaEtiqueta);
        jPanel6.add(Box.createRigidArea(new Dimension(0,5)));
        JPanel unPanel = new JPanel();
        unPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        //javax.swing.GroupLayout unPanelLayout = new javax.swing.GroupLayout(unPanel);
        
        Estadistica.agregarChartPanel(unPanel, unPanelJFreeChart);
        jPanel6.add(unPanel);
        jPanel6.add(Box.createRigidArea(new Dimension(0,5)));
        unPanel.setVisible(true);
    }
    private void generarLineasUnEquipamiento(Equipamiento unEquipamiento, Calendar fechaLimiteInferior, Calendar fechaLimiteSuperior) throws ExcepcionCargaParametros {
        
        if (unEquipamiento == null || fechaLimiteInferior == null || fechaLimiteSuperior == null)
            throw new ExcepcionCargaParametros("Revise los datos ingresados.");
        jPanel6.removeAll();
        long diasDeDiferencia = Organizacion.calcularCantidadDiasDiferencia(fechaLimiteInferior, fechaLimiteSuperior);
        if (diasDeDiferencia <= 0){
            throw new ExcepcionCargaParametros("La cantidad de días a censar tiene que ser mayor a 0 (Cero)");
        }
        Calendar[] calendarios = new Calendar[(int)diasDeDiferencia];
        for (int i = 0; i<diasDeDiferencia; i++){
            calendarios[i]= (Calendar) fechaLimiteInferior.clone();
            calendarios[i].add(Calendar.DATE, i);
        }
        Float[][] datosPorDia = unEquipamiento.getCantidadAvistamientos(fechaLimiteInferior, fechaLimiteSuperior);
        //Necesito titulo, titulo eje x, titulo eje y, CALENDARIO[] de fechas, FLOAT[][] de datosOBSERVADOS, String[] de atributos, y un escalar.
        ChartPanel unGrafico = Estadistica.generarGraficoLineasFechas(tituloReporte, "Tiempo", "Cantidad existente", calendarios, datosPorDia, Lote.TIPO_LOTES, 1f);
        agregarPanelAtributoCualitativo("Cantidad de Yerba", unGrafico);
        /*String[] dias = new String[(int)diasDeDiferencia];
        for (int i = 0; i < Lote.TIPO_LOTES.length; i++){
            String unAtributo = Lote.TIPO_LOTES[i];
            ChartPanel unGrafico = Estadistica.generarGraficoLineas(unAtributo, "Tipos de Yerba", "Cantidad existente", (Float[]) datosPorDia[i], dias, 0.75f);
            agregarPanelAtributoCualitativo(Lote.TIPO_LOTES[i], unGrafico);
        }*/
    }
}
