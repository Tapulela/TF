/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package InterfazGrafica;

import LogicaDeNegocio.Organizacion;
import LogicaDeNegocio.Proveedor;
import java.awt.Component;
import java.awt.Toolkit;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingConstants;

/**
 *
 * @author usuario
 */
public class GestionEstacionamientos extends javax.swing.JFrame implements TransferenciaInstancias {
    
    /**
     * Creates new form ABMProveedor
     */
    private Organizacion organizacion;
    private JFrame ventanaAnterior;
    private Proveedor unObjetoSeleccionado;
    private String trayectoriaActual;
    private String operacionActual;
    
    private final String textoAlta = "Registrar un estacionamiento";
    private final String textoBaja = "Anular un estacionamiento";
    private final String textoModificacion = "Modificar un CONCEPTO";
    
    public void setUnObjetoSeleccionado(Proveedor unObjetoSeleccionado) {
        this.unObjetoSeleccionado = unObjetoSeleccionado;
    }
    public GestionEstacionamientos() {
        initComponents();
    }



    GestionEstacionamientos(Organizacion organizacion, JFrame ventanaAnterior, String trayectoriaAnterior) {
        this.setUndecorated(true);
        initComponents();
        this.setSize(Toolkit.getDefaultToolkit().getScreenSize());
        this.organizacion = organizacion;
        this.getContentPane().setBackground(ParametrosDeInterfaz.colorFondo);
        setIconImage(new ImageIcon(getClass().getResource(ParametrosDeInterfaz.rutaIcono)).getImage());
        
        trayectoriaActual = trayectoriaAnterior+" - Gestión de estacionamientos";
        cabeceraDeVentana.configurarCabecera(ventanaAnterior, this, "Gestión de estacionamientos", this.trayectoriaActual, organizacion.getUsuarioActivo().getApellido()+", "+organizacion.getUsuarioActivo().getNombre());
        
        

        this.setVisible(true); 
        jBBuscar.setVisible(false);
        
        
        this.ventanaAnterior = ventanaAnterior;
        habilitarCamposIniciales();
        
        UtilidadesInterfazGrafica.establecerAlineacionDeTabla(jTable1, SwingConstants.CENTER);
        UtilidadesInterfazGrafica.establecerAlineacionDeTabla(jTable2, SwingConstants.CENTER);
        ParametrosDeInterfaz.configurarVentana(this);
    }
    private void organizarElementos(){
        this.deshabilitarTodo();
        switch((String)jCBOperacion.getSelectedItem()){
            case "Alta":
                prepararAlta();
                break;
            case "Baja":
                prepararBaja();
                break;
            case "Modificacion":
                prepararModificacion();
                break;
            default:
                limpiarCampos();
                break;
                
        }
        //this.pack();
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jBConcretarAccion = new javax.swing.JButton();
        jBCancelar = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jCBOperacion = new javax.swing.JComboBox<>();
        jBBuscar = new javax.swing.JButton();
        cabeceraDeVentana = new InterfazGrafica.CabeceraDeVentana();
        jLStaticEtiqueta9 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLStaticEtiqueta1 = new javax.swing.JLabel();
        jLStaticCampo1 = new javax.swing.JLabel();
        jTFCampo1 = new javax.swing.JTextField();
        jLStaticCalendar1 = new javax.swing.JLabel();
        jC1 = new com.toedter.calendar.JDateChooser();
        jLOperacionSeleccionada = new javax.swing.JLabel();
        jBBuscar1 = new javax.swing.JButton();
        jLStaticEtiqueta2 = new javax.swing.JLabel();
        jLStaticEtiqueta7 = new javax.swing.JLabel();
        jLStaticEtiqueta5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jBConcretarAccion1 = new javax.swing.JButton();
        jBConcretarAccion2 = new javax.swing.JButton();
        jBConcretarAccion3 = new javax.swing.JButton();
        jBConcretarAccion4 = new javax.swing.JButton();
        jLStaticEtiqueta3 = new javax.swing.JLabel();
        jLStaticEtiqueta4 = new javax.swing.JLabel();
        jLStaticEtiqueta8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 255, 153));

        jBConcretarAccion.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jBConcretarAccion.setText("Aceptar");
        jBConcretarAccion.setEnabled(false);
        jBConcretarAccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBConcretarAccionActionPerformed(evt);
            }
        });

        jBCancelar.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jBCancelar.setText("Cancelar");
        jBCancelar.setEnabled(false);
        jBCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelarActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLabel12.setText("Seleccione una operacion");

        jCBOperacion.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jCBOperacion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "Alta", "Baja", "Modificacion" }));
        jCBOperacion.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCBOperacionItemStateChanged(evt);
            }
        });

        jBBuscar.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jBBuscar.setText("Buscar un estacionamiento");
        jBBuscar.setEnabled(false);
        jBBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBuscarActionPerformed(evt);
            }
        });

        jLStaticEtiqueta9.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLStaticEtiqueta9.setText("Verifique que los lotes ingresados son los correctos, luego presione aceptar.");
        jLStaticEtiqueta9.setEnabled(false);

        jLStaticEtiqueta1.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLStaticEtiqueta1.setText("Camara donde se registrara el estacionamiento");
        jLStaticEtiqueta1.setEnabled(false);

        jLStaticCampo1.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLStaticCampo1.setText("Duracion (en días)");
        jLStaticCampo1.setEnabled(false);

        jTFCampo1.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jTFCampo1.setEnabled(false);

        jLStaticCalendar1.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLStaticCalendar1.setText("fecha de origen");
        jLStaticCalendar1.setEnabled(false);

        jC1.setEnabled(false);
        jC1.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N

        jLOperacionSeleccionada.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLOperacionSeleccionada.setText("Operación sobre un Concepto");
        jLOperacionSeleccionada.setEnabled(false);

        jBBuscar1.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jBBuscar1.setText("Buscar una Camara");
        jBBuscar1.setEnabled(false);
        jBBuscar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBuscar1ActionPerformed(evt);
            }
        });

        jLStaticEtiqueta2.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLStaticEtiqueta2.setText("Seleccione los lotes presentes en esta camara que seran utilizados para registrar el estacionamiento");
        jLStaticEtiqueta2.setEnabled(false);

        jLStaticEtiqueta7.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLStaticEtiqueta7.setText("Lotes disponibles");
        jLStaticEtiqueta7.setEnabled(false);

        jLStaticEtiqueta5.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLStaticEtiqueta5.setText("Lotes a estacionar");
        jLStaticEtiqueta5.setEnabled(false);

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setFont(new java.awt.Font("Dialog", 0, 20)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Etiqueta", "O.P.", "O.C."
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMinWidth(80);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(0).setMaxWidth(80);
        }

        jTable2.setAutoCreateRowSorter(true);
        jTable2.setFont(new java.awt.Font("Dialog", 0, 20)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Etiqueta", "O.P.", "Campo3"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setMinWidth(80);
            jTable2.getColumnModel().getColumn(0).setPreferredWidth(80);
            jTable2.getColumnModel().getColumn(0).setMaxWidth(80);
        }

        jBConcretarAccion1.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jBConcretarAccion1.setText(">");
        jBConcretarAccion1.setEnabled(false);
        jBConcretarAccion1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBConcretarAccion1ActionPerformed(evt);
            }
        });

        jBConcretarAccion2.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jBConcretarAccion2.setText(">>");
        jBConcretarAccion2.setEnabled(false);
        jBConcretarAccion2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBConcretarAccion2ActionPerformed(evt);
            }
        });

        jBConcretarAccion3.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jBConcretarAccion3.setText("<");
        jBConcretarAccion3.setEnabled(false);
        jBConcretarAccion3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBConcretarAccion3ActionPerformed(evt);
            }
        });

        jBConcretarAccion4.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jBConcretarAccion4.setText("<<");
        jBConcretarAccion4.setEnabled(false);
        jBConcretarAccion4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBConcretarAccion4ActionPerformed(evt);
            }
        });

        jLStaticEtiqueta3.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLStaticEtiqueta3.setText("Camara escogida:");
        jLStaticEtiqueta3.setEnabled(false);

        jLStaticEtiqueta4.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLStaticEtiqueta4.setText("una camara");
        jLStaticEtiqueta4.setEnabled(false);

        jLStaticEtiqueta8.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLStaticEtiqueta8.setText("(Maximo: # días)");
        jLStaticEtiqueta8.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 640, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBConcretarAccion1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBConcretarAccion2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBConcretarAccion3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBConcretarAccion4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 640, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLStaticCampo1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTFCampo1))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLStaticCalendar1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jC1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLStaticEtiqueta8))
                            .addComponent(jLOperacionSeleccionada)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLStaticEtiqueta1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jBBuscar1))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLStaticEtiqueta3)
                                .addGap(18, 18, 18)
                                .addComponent(jLStaticEtiqueta4))
                            .addComponent(jLStaticEtiqueta2)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLStaticEtiqueta7)
                                .addGap(569, 569, 569)
                                .addComponent(jLStaticEtiqueta5)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLOperacionSeleccionada)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLStaticEtiqueta1)
                    .addComponent(jBBuscar1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLStaticEtiqueta3)
                    .addComponent(jLStaticEtiqueta4))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jC1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLStaticCalendar1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLStaticCampo1)
                    .addComponent(jTFCampo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLStaticEtiqueta8))
                .addGap(18, 18, 18)
                .addComponent(jLStaticEtiqueta2)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLStaticEtiqueta7)
                    .addComponent(jLStaticEtiqueta5))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jBConcretarAccion1)
                        .addGap(18, 18, 18)
                        .addComponent(jBConcretarAccion2)
                        .addGap(18, 18, 18)
                        .addComponent(jBConcretarAccion3)
                        .addGap(18, 18, 18)
                        .addComponent(jBConcretarAccion4))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 345, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCBOperacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jBBuscar)
                        .addGap(589, 634, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLStaticEtiqueta9)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cabeceraDeVentana, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jBConcretarAccion)
                                .addGap(18, 18, 18)
                                .addComponent(jBCancelar)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cabeceraDeVentana, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jCBOperacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBBuscar))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLStaticEtiqueta9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBCancelar)
                    .addComponent(jBConcretarAccion))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void jBConcretarAccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBConcretarAccionActionPerformed
       
        switch ((String)jCBOperacion.getSelectedItem()){
            case "Alta":
                //SE VA A DAR DE ALTA ALGO
                break;
            case "Baja":
                //Se va a dar de baja algo
                break;
            case "Modificacion":
                //Se va a modificar 
                break;
        }
        JOptionPane.showMessageDialog(null, "Operación realizada con exito.");
        deshabilitarTodo();
        limpiarCampos();
        habilitarCamposIniciales();
        
    }//GEN-LAST:event_jBConcretarAccionActionPerformed

    private void jBCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelarActionPerformed
        this.deshabilitarTodo();
        this.limpiarCampos();
        this.habilitarCamposIniciales();
    }//GEN-LAST:event_jBCancelarActionPerformed

    private void jCBOperacionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCBOperacionItemStateChanged
        if (!jCBOperacion.getSelectedItem().equals("Seleccionar")){
            this.organizarElementos();
            
        }
        
    }//GEN-LAST:event_jCBOperacionItemStateChanged

    private void jBBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBuscarActionPerformed
        BuscarGenerico unaVentana = new BuscarGenerico(this.organizacion, this, this.trayectoriaActual);
        this.dispose();
    }//GEN-LAST:event_jBBuscarActionPerformed

    private void jBBuscar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBuscar1ActionPerformed
        BuscarEquipamiento unaVentana = new BuscarEquipamiento(this.organizacion, this, this.trayectoriaActual);
        this.dispose();
    }//GEN-LAST:event_jBBuscar1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int id = Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
        this.unObjetoSeleccionado = this.organizacion.getProveedores().get(id);
        //actualizarObjetoSeleccionado();
        //habilitarBotones();

    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable2MouseClicked

    private void jBConcretarAccion1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBConcretarAccion1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jBConcretarAccion1ActionPerformed

    private void jBConcretarAccion2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBConcretarAccion2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jBConcretarAccion2ActionPerformed

    private void jBConcretarAccion3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBConcretarAccion3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jBConcretarAccion3ActionPerformed

    private void jBConcretarAccion4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBConcretarAccion4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jBConcretarAccion4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestionEstacionamientos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestionEstacionamientos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestionEstacionamientos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionEstacionamientos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GestionEstacionamientos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private InterfazGrafica.CabeceraDeVentana cabeceraDeVentana;
    private javax.swing.JButton jBBuscar;
    private javax.swing.JButton jBBuscar1;
    private javax.swing.JButton jBCancelar;
    private javax.swing.JButton jBConcretarAccion;
    private javax.swing.JButton jBConcretarAccion1;
    private javax.swing.JButton jBConcretarAccion2;
    private javax.swing.JButton jBConcretarAccion3;
    private javax.swing.JButton jBConcretarAccion4;
    private com.toedter.calendar.JDateChooser jC1;
    private javax.swing.JComboBox<String> jCBOperacion;
    private javax.swing.JLabel jLOperacionSeleccionada;
    private javax.swing.JLabel jLStaticCalendar1;
    private javax.swing.JLabel jLStaticCampo1;
    private javax.swing.JLabel jLStaticEtiqueta1;
    private javax.swing.JLabel jLStaticEtiqueta2;
    private javax.swing.JLabel jLStaticEtiqueta3;
    private javax.swing.JLabel jLStaticEtiqueta4;
    private javax.swing.JLabel jLStaticEtiqueta5;
    private javax.swing.JLabel jLStaticEtiqueta7;
    private javax.swing.JLabel jLStaticEtiqueta8;
    private javax.swing.JLabel jLStaticEtiqueta9;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTFCampo1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables

    private void deshabilitarTodo(){
        //TAMBIEN SE HACEN INVISIBLE LOS ELEMENTOS QUE SEAN NECESARIOS
        jBBuscar.setVisible(false);
        
        jLOperacionSeleccionada.setEnabled(false);
        
        jLStaticCampo1.setEnabled(false);
        
        jTFCampo1.setEnabled(false);
        
        
        jLStaticEtiqueta1.setEnabled(false);
        jLStaticEtiqueta2.setEnabled(false);
        jLStaticEtiqueta3.setEnabled(false);
        jLStaticEtiqueta4.setEnabled(false);
        jLStaticEtiqueta5.setEnabled(false);
        jLStaticEtiqueta7.setEnabled(false);
        jLStaticEtiqueta8.setEnabled(false);
        jLStaticEtiqueta9.setEnabled(false);
        
        jLStaticCalendar1.setEnabled(false);
        
        jC1.setEnabled(false);
        
        jCBOperacion.setEnabled(false);
        jBBuscar.setEnabled(false);
        jBConcretarAccion.setEnabled(false);
        jBCancelar.setEnabled(false);
        
    }
    
    private void limpiarCampos() {
                this.operacionActual = "";
                jLStaticEtiqueta7.setText("Operación:");
                
                jTFCampo1.setText("");

                this.unObjetoSeleccionado = null;
    }

    @Override
    public void actualizarUnObjeto(Object unObjeto) {
        Proveedor unProveedor = (Proveedor) unObjeto;
        this.unObjetoSeleccionado = unProveedor;
        jTFCampo1.setText(unProveedor.getRazonSocial());
        
        organizarElementos();
        jBConcretarAccion.setEnabled(true);
        jBCancelar.setEnabled(true);
        this.pack();
    }

    private void prepararAlta() {
        this.operacionActual = "Alta";
        jBConcretarAccion.setText("Dar de alta");
        jLOperacionSeleccionada.setText(this.textoAlta);
        
        jLOperacionSeleccionada.setEnabled(true);
        
        jLStaticCampo1.setEnabled(true);
        
        jTFCampo1.setEnabled(true);
        
        //jLEstado.setEnabled(true); EL ESTADO NO SE ELIGE CUANDO SE DA DE ALTA.
        
        //jCBEstado.setEnabled(true); EL ESTADO NO SE ELIGE CUANDO SE DA DE ALTA.
        
        jLStaticEtiqueta1.setEnabled(true);
        jLStaticEtiqueta2.setEnabled(true);
        jLStaticEtiqueta3.setEnabled(true);
        jLStaticEtiqueta4.setEnabled(true);
        jLStaticEtiqueta5.setEnabled(true);
        jLStaticEtiqueta7.setEnabled(true);
        jLStaticEtiqueta8.setEnabled(true);
        jLStaticEtiqueta9.setEnabled(true);
        
        jLStaticCalendar1.setEnabled(true);
        
        jC1.setEnabled(true);
        
        jBConcretarAccion.setEnabled(true);
        jBCancelar.setEnabled(true);
        
        
        
    }
    
    private void prepararBaja() {
        this.operacionActual = "Baja";
        
        jBBuscar.setEnabled(true);
        jBBuscar.setVisible(true);
        
        jLOperacionSeleccionada.setText(textoBaja);
        jLOperacionSeleccionada.setEnabled(true);
        
        jLStaticCampo1.setEnabled(true);
        
        
        jLStaticEtiqueta1.setEnabled(true);
        jLStaticEtiqueta2.setEnabled(true);
        jLStaticEtiqueta3.setEnabled(true);
        jLStaticEtiqueta4.setEnabled(true);
        jLStaticEtiqueta5.setEnabled(true);
        jLStaticEtiqueta7.setEnabled(true);
        jLStaticEtiqueta8.setEnabled(true);
        jLStaticEtiqueta9.setEnabled(true);
        
        jLStaticCalendar1.setEnabled(true);
        
        jBCancelar.setEnabled(true);
        
        if (this.unObjetoSeleccionado == null)
            return;
        jBConcretarAccion.setEnabled(true);
        jBConcretarAccion.setText("Dar de baja");
        
    }

    private void prepararModificacion() {
        this.operacionActual = "Modificacion";
        jLOperacionSeleccionada.setText(this.textoModificacion);
        jLOperacionSeleccionada.setEnabled(true);

        jBBuscar.setVisible(true);
        jBBuscar.setEnabled(true);
        jBCancelar.setEnabled(true);
        
        
        if (unObjetoSeleccionado == null)
            return;
        
        
        jLStaticCampo1.setEnabled(true);
        
        jTFCampo1.setEnabled(true); //SI ALGUN CAMPO NO SE PUDIERA MODIFICAR, (POR EJEMPLO, FECHA DE CREACION, CONCEPTO ASOCIADO, ETC. BORRAR ESTAS LINEAS)
        
        
        
        jLStaticEtiqueta1.setEnabled(true);
        jLStaticEtiqueta2.setEnabled(true);
        jLStaticEtiqueta3.setEnabled(true);
        jLStaticEtiqueta4.setEnabled(true);
        jLStaticEtiqueta5.setEnabled(true);
        jLStaticEtiqueta7.setEnabled(true);
        jLStaticEtiqueta8.setEnabled(true);
        jLStaticEtiqueta9.setEnabled(true);
        
        jLStaticCalendar1.setEnabled(true);
        
        jC1.setEnabled(true);
        
        jBConcretarAccion.setEnabled(true);
        jBConcretarAccion.setText("Guardar cambios");

    }

    public String getOperacionActual() {
        return operacionActual;
    }

    private void habilitarCamposIniciales() {
        jLabel12.setEnabled(true);
        jCBOperacion.setEnabled(true);
        this.jCBOperacion.setSelectedItem("Seleccionar");
    }
    

}
