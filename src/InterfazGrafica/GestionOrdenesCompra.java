/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package InterfazGrafica;

import LogicaDeNegocio.ExcepcionCargaParametros;
import LogicaDeNegocio.OrdenDeCompra;
import LogicaDeNegocio.OrdenDeProduccion;
import LogicaDeNegocio.Organizacion;
import LogicaDeNegocio.Proveedor;
import LogicaDeNegocio.Validaciones;
import Persistencia.ExcepcionPersistencia;
import java.awt.event.ItemEvent;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author usuario
 */
public class GestionOrdenesCompra extends javax.swing.JFrame implements TransferenciaInstancias {
    
    /**
     * Creates new form ABMProveedor
     */
    private Organizacion organizacion;
    private JFrame ventanaAnterior;
    private OrdenDeCompra unaOrdenDeCompraSeleccionada;
    private Proveedor proveedorSeleccionado;
    private OrdenDeProduccion ordenProduccionSeleccionada;
    private String trayectoriaActual;
    private String operacionActual;
    
    private final String textoAlta = "Dar de alta una Orden de Compra";
    private final String textoBaja = "Dar de baja una Orden de Compra";
    private final String textoModificacion = "Modificar una Orden de Compra";
    
    public void setUnaOrdenDeCompraSeleccionada(OrdenDeCompra unaOrdenDeCompraSeleccionada) {
        this.unaOrdenDeCompraSeleccionada = unaOrdenDeCompraSeleccionada;
    }
    public GestionOrdenesCompra() {
        initComponents();
    }



    GestionOrdenesCompra(Organizacion organizacion, JFrame ventanaAnterior, String trayectoriaAnterior) {
        initComponents();
        this.organizacion = organizacion;
        this.getContentPane().setBackground(ParametrosDeInterfaz.colorFondo);
        jCBoxProveedorAsociado.setBackground(ParametrosDeInterfaz.colorFondo);
        setIconImage(new ImageIcon(getClass().getResource(ParametrosDeInterfaz.rutaIcono)).getImage());
        trayectoriaActual = trayectoriaAnterior+" - Gestion de Ordenes de Compra";
        cabeceraDeVentana.configurarCabecera(ventanaAnterior, this, "Gestion de Ordenes de Compra", this.trayectoriaActual, organizacion.getUsuarioActivo().getApellido()+", "+organizacion.getUsuarioActivo().getNombre());
        

        this.setVisible(true); 
        jBBuscar.setVisible(false);
        
        
        this.ventanaAnterior = ventanaAnterior;
    }
    private void organizarElementos(){
        this.deshabilitarTodo();
        switch((String)jCBOperacion.getSelectedItem()){
            case "Alta":
                prepararAlta();
                break;
            case "Baja":
                prepararBaja();
                break;
            case "Modificacion":
                prepararModificacion();
                break;
            default:
                limpiarCampos();
                break;
                
        }
        this.pack();
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLStaticCampo1 = new javax.swing.JLabel();
        jTFCampo1 = new javax.swing.JTextField();
        jLStaticEtiqueta7 = new javax.swing.JLabel();
        jBConcretarAccion = new javax.swing.JButton();
        jBCancelar = new javax.swing.JButton();
        jLStaticCampo2 = new javax.swing.JLabel();
        jTFCampo2 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jCBOperacion = new javax.swing.JComboBox<>();
        jBBuscar = new javax.swing.JButton();
        jLEstaticoEstado = new javax.swing.JLabel();
        cabeceraDeVentana = new InterfazGrafica.CabeceraDeVentana();
        jCB1 = new javax.swing.JComboBox<>();
        jLStaticCB1 = new javax.swing.JLabel();
        jLStaticCalendar1 = new javax.swing.JLabel();
        jLOperacionSeleccionada = new javax.swing.JLabel();
        jLStaticEtiqueta6 = new javax.swing.JLabel();
        jLStaticEtiqueta4 = new javax.swing.JLabel();
        jLFechaOrigen = new javax.swing.JLabel();
        jLEstado = new javax.swing.JLabel();
        jLOrdenProduccionSeleccionada = new javax.swing.JLabel();
        jBBuscarOrdenProduccion = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLStaticEtiqueta1 = new javax.swing.JLabel();
        jBBuscarProveedor = new javax.swing.JButton();
        jLStaticEtiqueta2 = new javax.swing.JLabel();
        jLProveedorSeleccionado = new javax.swing.JLabel();
        jCBoxProveedorAsociado = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 255, 153));

        jLStaticCampo1.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLStaticCampo1.setText("Cantidad a Comprar");
        jLStaticCampo1.setEnabled(false);

        jTFCampo1.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jTFCampo1.setEnabled(false);

        jLStaticEtiqueta7.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLStaticEtiqueta7.setText("Pesos Argentinos por unidad");
        jLStaticEtiqueta7.setEnabled(false);

        jBConcretarAccion.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jBConcretarAccion.setText("Aceptar");
        jBConcretarAccion.setEnabled(false);
        jBConcretarAccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBConcretarAccionActionPerformed(evt);
            }
        });

        jBCancelar.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jBCancelar.setText("Cancelar");
        jBCancelar.setEnabled(false);
        jBCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelarActionPerformed(evt);
            }
        });

        jLStaticCampo2.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLStaticCampo2.setText("Costo de Compra");
        jLStaticCampo2.setEnabled(false);

        jTFCampo2.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jTFCampo2.setEnabled(false);

        jLabel12.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLabel12.setText("Seleccione una operacion");

        jCBOperacion.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jCBOperacion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "Alta", "Baja", "Modificacion" }));
        jCBOperacion.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCBOperacionItemStateChanged(evt);
            }
        });

        jBBuscar.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jBBuscar.setText("Buscar una Orden de Compra");
        jBBuscar.setEnabled(false);
        jBBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBuscarActionPerformed(evt);
            }
        });

        jLEstaticoEstado.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLEstaticoEstado.setText("Estado");
        jLEstaticoEstado.setEnabled(false);

        jCB1.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jCB1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "Kilogramo", "Tonelada" }));
        jCB1.setEnabled(false);

        jLStaticCB1.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLStaticCB1.setText("Unidad de Medida");
        jLStaticCB1.setEnabled(false);

        jLStaticCalendar1.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLStaticCalendar1.setText("Fecha de Origen");
        jLStaticCalendar1.setEnabled(false);

        jLOperacionSeleccionada.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLOperacionSeleccionada.setText("Operación sobre un Concepto");
        jLOperacionSeleccionada.setEnabled(false);

        jLStaticEtiqueta6.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLStaticEtiqueta6.setText("Orden de Producción seleccionada:");
        jLStaticEtiqueta6.setEnabled(false);

        jLStaticEtiqueta4.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLStaticEtiqueta4.setText("Orden de Produccion Asociada");
        jLStaticEtiqueta4.setEnabled(false);

        jLFechaOrigen.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLFechaOrigen.setText("         ");
        jLFechaOrigen.setEnabled(false);

        jLEstado.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLEstado.setText("       ");
        jLEstado.setEnabled(false);

        jLOrdenProduccionSeleccionada.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLOrdenProduccionSeleccionada.setText("          ");
        jLOrdenProduccionSeleccionada.setEnabled(false);

        jBBuscarOrdenProduccion.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jBBuscarOrdenProduccion.setText("Buscar una Orden de Producción");
        jBBuscarOrdenProduccion.setEnabled(false);
        jBBuscarOrdenProduccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBuscarOrdenProduccionActionPerformed(evt);
            }
        });

        jLStaticEtiqueta1.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLStaticEtiqueta1.setText("Proveedor Asociado");
        jLStaticEtiqueta1.setEnabled(false);

        jBBuscarProveedor.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jBBuscarProveedor.setText("Buscar un Proveedor");
        jBBuscarProveedor.setEnabled(false);
        jBBuscarProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBuscarProveedorActionPerformed(evt);
            }
        });

        jLStaticEtiqueta2.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLStaticEtiqueta2.setText("Proveedor Seleccionado");
        jLStaticEtiqueta2.setEnabled(false);

        jLProveedorSeleccionado.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLProveedorSeleccionado.setText("          ");
        jLProveedorSeleccionado.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLStaticEtiqueta2)
                        .addGap(18, 18, 18)
                        .addComponent(jLProveedorSeleccionado))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLStaticEtiqueta1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBBuscarProveedor)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLStaticEtiqueta1)
                    .addComponent(jBBuscarProveedor))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLStaticEtiqueta2)
                    .addComponent(jLProveedorSeleccionado))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jCBoxProveedorAsociado.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jCBoxProveedorAsociado.setText("Posee proveedor asociado");
        jCBoxProveedorAsociado.setEnabled(false);
        jCBoxProveedorAsociado.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCBoxProveedorAsociadoItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cabeceraDeVentana, javax.swing.GroupLayout.DEFAULT_SIZE, 1344, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jBConcretarAccion)
                                .addGap(18, 18, 18)
                                .addComponent(jBCancelar))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel12)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jCBOperacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jBBuscar))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLStaticEtiqueta4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jBBuscarOrdenProduccion)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLStaticEtiqueta6)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLOrdenProduccionSeleccionada))
                                    .addComponent(jCBoxProveedorAsociado))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLOperacionSeleccionada)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLStaticCB1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCB1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLStaticCampo1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTFCampo1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLStaticCampo2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTFCampo2, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLStaticEtiqueta7))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLStaticCalendar1)
                                .addGap(18, 18, 18)
                                .addComponent(jLFechaOrigen)
                                .addGap(18, 18, 18)
                                .addComponent(jLEstaticoEstado)
                                .addGap(18, 18, 18)
                                .addComponent(jLEstado)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cabeceraDeVentana, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jCBOperacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBBuscar))
                .addGap(24, 24, 24)
                .addComponent(jLOperacionSeleccionada)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLStaticEtiqueta4)
                    .addComponent(jBBuscarOrdenProduccion))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLStaticEtiqueta6)
                    .addComponent(jLOrdenProduccionSeleccionada))
                .addGap(18, 18, 18)
                .addComponent(jCBoxProveedorAsociado)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLStaticCB1)
                    .addComponent(jCB1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLStaticCampo1)
                    .addComponent(jTFCampo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLStaticCampo2)
                    .addComponent(jTFCampo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLStaticEtiqueta7))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLEstaticoEstado)
                        .addComponent(jLEstado))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLStaticCalendar1)
                        .addComponent(jLFechaOrigen)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBCancelar)
                    .addComponent(jBConcretarAccion))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void jBConcretarAccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBConcretarAccionActionPerformed
       
        try {
            switch ((String)jCBOperacion.getSelectedItem()){
                case "Alta":
                    if (jCBoxProveedorAsociado.isSelected()){
                        this.organizacion.registrarOrdenDeCompra(this.ordenProduccionSeleccionada, this.proveedorSeleccionado, (String) jCB1.getSelectedItem(), jTFCampo1.getText(), jTFCampo2.getText());    
                    }else{
                        this.organizacion.registrarOrdenDeCompra(this.ordenProduccionSeleccionada, null, (String) jCB1.getSelectedItem(), jTFCampo1.getText(), jTFCampo2.getText());    
                    }
                        
                    
                    break;
                case "Baja":
                    this.organizacion.anularOrdenDeCompra(this.unaOrdenDeCompraSeleccionada);
                    break;
                case "Modificacion":
                    if (jCBoxProveedorAsociado.isSelected() && proveedorSeleccionado == null)
                        throw new ExcepcionCargaParametros("Debe seleccionar el proveedor sobre el que se registra la orden de compra.");
                    if (!jCBoxProveedorAsociado.isSelected())
                        proveedorSeleccionado = null;
                    this.organizacion.modificarOrdenDeCompra(unaOrdenDeCompraSeleccionada, (String) jCB1.getSelectedItem(), jTFCampo2.getText(), unaOrdenDeCompraSeleccionada.getEstado(), jTFCampo1.getText(), proveedorSeleccionado, ordenProduccionSeleccionada);
                    break;
            }
            JOptionPane.showMessageDialog(null, "Operacion realizada con exito.");
            limpiarCampos();
            habilitarCamposIniciales();
        } catch (ExcepcionCargaParametros ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error en la Base de datos: "+ ex.getMessage());
        } catch (ExcepcionPersistencia ex) {
            JOptionPane.showMessageDialog(null, "Error en la Persistencia: "+ ex.getMessage());
        }
        
    }//GEN-LAST:event_jBConcretarAccionActionPerformed

    private void jBCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelarActionPerformed
        this.limpiarCampos();
        this.habilitarCamposIniciales();
    }//GEN-LAST:event_jBCancelarActionPerformed

    private void jCBOperacionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCBOperacionItemStateChanged
        if (!jCBOperacion.getSelectedItem().equals("Seleccionar")){
            this.organizarElementos();
            
        }
        
    }//GEN-LAST:event_jCBOperacionItemStateChanged

    private void jBBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBuscarActionPerformed
        BuscarOrdenCompra unaVentana = new BuscarOrdenCompra(this.organizacion, this, this.trayectoriaActual);
        this.dispose();
    }//GEN-LAST:event_jBBuscarActionPerformed

    private void jBBuscarProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBuscarProveedorActionPerformed
        BuscarProveedor unaVentana = new BuscarProveedor(this.organizacion, this, this.trayectoriaActual);
        this.dispose();
    }//GEN-LAST:event_jBBuscarProveedorActionPerformed

    private void jBBuscarOrdenProduccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBuscarOrdenProduccionActionPerformed
        BuscarOrdenDeProduccion unaVentana = new BuscarOrdenDeProduccion(this.organizacion, this, this.trayectoriaActual);
        this.dispose();
    }//GEN-LAST:event_jBBuscarOrdenProduccionActionPerformed

    private void jCBoxProveedorAsociadoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCBoxProveedorAsociadoItemStateChanged
        if (evt.getStateChange()==ItemEvent.SELECTED)
            habilitarSeleccionProveedor();
        if (evt.getStateChange()==ItemEvent.DESELECTED)
            deshabilitarSeleccionProveedor();
    }//GEN-LAST:event_jCBoxProveedorAsociadoItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestionOrdenesCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestionOrdenesCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestionOrdenesCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionOrdenesCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GestionOrdenesCompra().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private InterfazGrafica.CabeceraDeVentana cabeceraDeVentana;
    private javax.swing.JButton jBBuscar;
    private javax.swing.JButton jBBuscarOrdenProduccion;
    private javax.swing.JButton jBBuscarProveedor;
    private javax.swing.JButton jBCancelar;
    private javax.swing.JButton jBConcretarAccion;
    private javax.swing.JComboBox<String> jCB1;
    private javax.swing.JComboBox<String> jCBOperacion;
    private javax.swing.JCheckBox jCBoxProveedorAsociado;
    private javax.swing.JLabel jLEstado;
    private javax.swing.JLabel jLEstaticoEstado;
    private javax.swing.JLabel jLFechaOrigen;
    private javax.swing.JLabel jLOperacionSeleccionada;
    private javax.swing.JLabel jLOrdenProduccionSeleccionada;
    private javax.swing.JLabel jLProveedorSeleccionado;
    private javax.swing.JLabel jLStaticCB1;
    private javax.swing.JLabel jLStaticCalendar1;
    private javax.swing.JLabel jLStaticCampo1;
    private javax.swing.JLabel jLStaticCampo2;
    private javax.swing.JLabel jLStaticEtiqueta1;
    private javax.swing.JLabel jLStaticEtiqueta2;
    private javax.swing.JLabel jLStaticEtiqueta4;
    private javax.swing.JLabel jLStaticEtiqueta6;
    private javax.swing.JLabel jLStaticEtiqueta7;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTFCampo1;
    private javax.swing.JTextField jTFCampo2;
    // End of variables declaration//GEN-END:variables

    private void deshabilitarTodo(){
        //TAMBIEN SE HACEN INVISIBLE LOS ELEMENTOS QUE SEAN NECESARIOS
        
        //if (jCBoxProveedorAsociado.isSelected())
        //    jCBoxProveedorAsociado.doClick();
        jCBoxProveedorAsociado.setSelected(false);
        deshabilitarSeleccionProveedor();
        jCBoxProveedorAsociado.setEnabled(false);
        jBBuscar.setVisible(false);
        jBBuscarOrdenProduccion.setEnabled(false);
        jBBuscarProveedor.setEnabled(false);
        
        jLOperacionSeleccionada.setEnabled(false);
        
        jLStaticCampo1.setEnabled(false);
        jLStaticCampo2.setEnabled(false);
        
        jTFCampo1.setEnabled(false);
        jTFCampo2.setEnabled(false);
        
        jLEstado.setVisible(false);
        jLEstaticoEstado.setVisible(false);
        jLEstaticoEstado.setEnabled(false);
        jLStaticCB1.setEnabled(false);
        
        jCB1.setEnabled(false);
        
        jLStaticEtiqueta1.setEnabled(false);
        jLStaticEtiqueta2.setEnabled(false);
        jLProveedorSeleccionado.setEnabled(false);
        jLStaticEtiqueta4.setEnabled(false);
        jLOrdenProduccionSeleccionada.setEnabled(false);
        jLStaticEtiqueta6.setEnabled(false);
        jLStaticEtiqueta7.setEnabled(false);
        jLFechaOrigen.setEnabled(false);
        jLEstado.setEnabled(false);
        
        jLStaticCalendar1.setEnabled(false);
        
        jCBOperacion.setEnabled(false);
        jBBuscar.setEnabled(false);
        jBConcretarAccion.setEnabled(false);
        jBCancelar.setEnabled(false);
        
    }
    
    private void limpiarCampos() {
                deshabilitarTodo();
        
                this.operacionActual = "";
                jLOperacionSeleccionada.setText("");
                
                jTFCampo1.setText("");
                jTFCampo2.setText("");
                
                jLOrdenProduccionSeleccionada.setText("");
                jLProveedorSeleccionado.setText("");
                jLFechaOrigen.setText("");
                jLEstado.setText("");
                
                jCB1.setSelectedItem("Seleccionar");
                this.unaOrdenDeCompraSeleccionada = null;
                this.proveedorSeleccionado = null;
                this.ordenProduccionSeleccionada = null;
    }

    @Override
    public void actualizarUnObjeto(Object UnObjeto) {
        switch (UnObjeto.getClass().getSimpleName()){
            case "OrdenDeCompra":
                OrdenDeCompra unaOrdenDeCompra = (OrdenDeCompra) UnObjeto;
                this.unaOrdenDeCompraSeleccionada = unaOrdenDeCompra;
                jLOrdenProduccionSeleccionada.setText(""+unaOrdenDeCompra.getOrdenDeProduccionAsociada().getId());
                if (unaOrdenDeCompra.poseeProveedorAsociado())
                    this.proveedorSeleccionado = unaOrdenDeCompra.getProveedorAsociado();
                this.ordenProduccionSeleccionada = unaOrdenDeCompra.getOrdenDeProduccionAsociada();
                break;
            case "OrdenDeProduccion":
                OrdenDeProduccion unaOrdenProduccion = (OrdenDeProduccion) UnObjeto;
                this.ordenProduccionSeleccionada = unaOrdenProduccion;
                break;
            case "Proveedor":
                Proveedor unProveedor = (Proveedor) UnObjeto;
                this.proveedorSeleccionado = unProveedor;
                break;
                
                
        }
        organizarElementos();
        jBConcretarAccion.setEnabled(true);
        jBCancelar.setEnabled(true);
        this.pack();
    }
    
    private void prepararAlta() {
        this.operacionActual = "Alta";
        jBConcretarAccion.setText("Dar de alta");
        jLOperacionSeleccionada.setText(this.textoAlta);
        jLFechaOrigen.setText((new SimpleDateFormat( "dd/MM/yyyy" ) ).format( Calendar.getInstance().getTime() ));
        
        jCBoxProveedorAsociado.setEnabled(true);
        if (!jCBoxProveedorAsociado.isSelected() && proveedorSeleccionado != null){
            jCBoxProveedorAsociado.doClick();
            habilitarSeleccionProveedor();
        }
        
        cargarOrdenDeProduccion();
        cargarProveedor();
        jBBuscarOrdenProduccion.setEnabled(true);
        
        jLOperacionSeleccionada.setEnabled(true);
        
        jLStaticCampo1.setEnabled(true);
        jLStaticCampo2.setEnabled(true);
        
        jTFCampo1.setEnabled(true);
        jTFCampo2.setEnabled(true);
        
        jLEstaticoEstado.setEnabled(true);
        jLStaticCB1.setEnabled(true);
        
        jCB1.setEnabled(true);
        
        jLStaticEtiqueta4.setEnabled(true);
        jLOrdenProduccionSeleccionada.setEnabled(true);
        jLStaticEtiqueta6.setEnabled(true);
        jLStaticEtiqueta7.setEnabled(true);
        jLFechaOrigen.setEnabled(true);
        jLEstado.setEnabled(true);
        
        jLStaticCalendar1.setEnabled(true);
        
        jBConcretarAccion.setEnabled(true);
        jBCancelar.setEnabled(true);
        
        
        
    }
    
    private void prepararBaja() {
        this.operacionActual = "Baja";
        
        jBBuscar.setEnabled(true);
        jBBuscar.setVisible(true);
        
        jLOperacionSeleccionada.setText(textoBaja);
        
        jLOperacionSeleccionada.setEnabled(true);
        jBCancelar.setEnabled(true);
        if (this.unaOrdenDeCompraSeleccionada == null)
            return;
        
        cargarOrdenDeCompra();
        cargarOrdenDeProduccion();
        cargarProveedor();
        
        if (proveedorSeleccionado != null){
            jCBoxProveedorAsociado.setSelected(true);
            deshabilitarSeleccionProveedor();
        }
        jLStaticCampo1.setEnabled(true);
        jLStaticCampo2.setEnabled(true);
        
        jLEstaticoEstado.setEnabled(true);
        jLStaticCB1.setEnabled(true);
        
        jLStaticEtiqueta1.setEnabled(true);
        jLStaticEtiqueta2.setEnabled(true);
        jLProveedorSeleccionado.setEnabled(true);
        jLStaticEtiqueta4.setEnabled(true);
        jLOrdenProduccionSeleccionada.setEnabled(true);
        jLStaticEtiqueta6.setEnabled(true);
        jLStaticEtiqueta7.setEnabled(true);
        jLFechaOrigen.setEnabled(true);
        jLEstado.setEnabled(true);
        
        jLStaticCalendar1.setEnabled(true);
        
        jBBuscar.setEnabled(true);
        
        jBConcretarAccion.setEnabled(true);
        jBConcretarAccion.setText("Dar de baja");
        
    }

    private void prepararModificacion() {
        this.operacionActual = "Modificacion";
        
        
        jLOperacionSeleccionada.setText(this.textoModificacion);
        jLOperacionSeleccionada.setEnabled(true);
        jBBuscar.setVisible(true);
        jBBuscar.setEnabled(true);
        jBCancelar.setEnabled(true);
        
        
        if (unaOrdenDeCompraSeleccionada == null)
            return;
        
        
        cargarOrdenDeCompra();
        cargarOrdenDeProduccion();
        cargarProveedor();
        
        jCBoxProveedorAsociado.setEnabled(true);
        if (unaOrdenDeCompraSeleccionada.poseeProveedorAsociado() && !jCBoxProveedorAsociado.isSelected())
            jCBoxProveedorAsociado.doClick();
        if (!unaOrdenDeCompraSeleccionada.poseeProveedorAsociado() && proveedorSeleccionado!=null)
            jCBoxProveedorAsociado.doClick();        
        jBBuscarOrdenProduccion.setEnabled(true);
        
        jLStaticCampo1.setEnabled(true);
        jLStaticCampo2.setEnabled(true);
        
        jTFCampo1.setEnabled(true); //SI ALGUN CAMPO NO SE PUDIERA MODIFICAR, (POR EJEMPLO, FECHA DE CREACION, CONCEPTO ASOCIADO, ETC. BORRAR ESTAS LINEAS)
        jTFCampo2.setEnabled(true);
        
        jLEstaticoEstado.setEnabled(true);
        jLStaticCB1.setEnabled(true);
        
        jCB1.setEnabled(true);
        
        jLStaticEtiqueta1.setEnabled(true);
        jLStaticEtiqueta2.setEnabled(true);
        jLProveedorSeleccionado.setEnabled(true);
        jLStaticEtiqueta4.setEnabled(true);
        jLOrdenProduccionSeleccionada.setEnabled(true);
        jLStaticEtiqueta6.setEnabled(true);
        jLStaticEtiqueta7.setEnabled(true);
        jLFechaOrigen.setEnabled(true);
        jLEstado.setEnabled(true);
        
        jLStaticCalendar1.setEnabled(true);
        
        jBConcretarAccion.setEnabled(true);
        jBConcretarAccion.setText("Guardar cambios");

    }

    public String getOperacionActual() {
        return operacionActual;
    }

    private void habilitarCamposIniciales() {
        jLabel12.setEnabled(true);
        jCBOperacion.setEnabled(true);
        this.jCBOperacion.setSelectedItem("Seleccionar");
    }

    private void habilitarSeleccionProveedor() {
        jBBuscarProveedor.setEnabled(true);
        if (proveedorSeleccionado != null){
            jLStaticEtiqueta1.setEnabled(true);
            jLStaticEtiqueta2.setEnabled(true);
            jLProveedorSeleccionado.setEnabled(true);
        }
    }

    private void deshabilitarSeleccionProveedor() {
        jBBuscarProveedor.setEnabled(false);
        jLStaticEtiqueta1.setEnabled(false);
        jLStaticEtiqueta2.setEnabled(false);
        jLProveedorSeleccionado.setEnabled(false);
        jBBuscarProveedor.setEnabled(false);

    }

    private void cargarOrdenDeCompra() {
        if (unaOrdenDeCompraSeleccionada==null)
            return;
        jCB1.setSelectedItem(unaOrdenDeCompraSeleccionada.getUnidadDeMedida());
        jTFCampo1.setText(""+unaOrdenDeCompraSeleccionada.getCantidadAComprar());
        jTFCampo2.setText(""+unaOrdenDeCompraSeleccionada.getCostoPorUnidad());
        jLFechaOrigen.setText(( new SimpleDateFormat( "dd/MM/YYYY" ) ).format(unaOrdenDeCompraSeleccionada.getFechaOrigenC().getTime()) );
        jLEstado.setText(unaOrdenDeCompraSeleccionada.getEstado());
    }
    
    private void cargarOrdenDeProduccion(){
        if (ordenProduccionSeleccionada==null)
            return;
        jLStaticEtiqueta6.setEnabled(true);
        jLOrdenProduccionSeleccionada.setEnabled(true);
        jLOrdenProduccionSeleccionada.setText(""+this.ordenProduccionSeleccionada.getId());
    }

    private void cargarProveedor() {
        if (proveedorSeleccionado == null)
            return;
        jLStaticEtiqueta2.setEnabled(true);
        jLProveedorSeleccionado.setEnabled(true);
        jLProveedorSeleccionado.setText(proveedorSeleccionado.getRazonSocial()+", (CUIT: "+proveedorSeleccionado.getCuit()+")");
    }

}
