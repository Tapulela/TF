/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package InterfazGrafica.Paneles;

import LogicaDeNegocio.Bascula;
import LogicaDeNegocio.CamaraEstacionamiento;
import LogicaDeNegocio.Equipamiento;
import LogicaDeNegocio.ExcepcionCargaParametros;
import LogicaDeNegocio.Organizacion;
import Persistencia.ExcepcionPersistencia;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.JOptionPane;

/**
 *
 * @author usuario
 */
public class PanelABMEquipamiento extends javax.swing.JPanel {

    /**
     * Creates new form PanelABMEquipamiento
     */
    
    private Organizacion organizacion;
    private String operacionActual;
    private String trayectoriaActual;
    private Equipamiento unEquipamientoSeleccionado;
    public PanelABMEquipamiento() {
        initComponents();
    }
    
    public PanelABMEquipamiento(Organizacion organizacion) {
        initComponents();
        this.organizacion = organizacion;
        cargaBasculas();
        this.setVisible(true); 
        jBBuscar.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTFDireccion = new javax.swing.JTextField();
        jLDuracionMax = new javax.swing.JLabel();
        jTFDuracionMax = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jCBOperacion = new javax.swing.JComboBox<>();
        jLNombre = new javax.swing.JLabel();
        jBBuscar = new javax.swing.JButton();
        jTFNombre = new javax.swing.JTextField();
        jLOperacion = new javax.swing.JLabel();
        jLDias = new javax.swing.JLabel();
        jLEstado = new javax.swing.JLabel();
        jLTipoEquipamiento = new javax.swing.JLabel();
        jCBEstado = new javax.swing.JComboBox<>();
        jCBUnidadMedida = new javax.swing.JComboBox<>();
        jLFechaAdq = new javax.swing.JLabel();
        jLFechaUltim = new javax.swing.JLabel();
        jCFechaAdquisicion = new com.toedter.calendar.JDateChooser();
        jLCapacidadMax = new javax.swing.JLabel();
        jTFCapacidadMax = new javax.swing.JTextField();
        jLUnidadMedida = new javax.swing.JLabel();
        jCBTipoEquipamiento = new javax.swing.JComboBox<>();
        jLBascula = new javax.swing.JLabel();
        jCBBascula = new javax.swing.JComboBox<>();
        jCFechaUltimoMantenimiento = new com.toedter.calendar.JDateChooser();
        jLDireccion = new javax.swing.JLabel();
        jBConcretarAccion = new javax.swing.JButton();
        jBCancelar = new javax.swing.JButton();

        jTFDireccion.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jTFDireccion.setText("Ingrese una direccion");
        jTFDireccion.setEnabled(false);

        jLDuracionMax.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLDuracionMax.setText("Duración maxima de estacionamiento:");
        jLDuracionMax.setEnabled(false);

        jTFDuracionMax.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jTFDuracionMax.setEnabled(false);

        jLabel12.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLabel12.setText("Seleccione una operacion");

        jCBOperacion.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jCBOperacion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "Alta", "Baja", "Modificacion" }));
        jCBOperacion.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCBOperacionItemStateChanged(evt);
            }
        });

        jLNombre.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLNombre.setText("Nombre");
        jLNombre.setEnabled(false);

        jBBuscar.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jBBuscar.setText("Buscar un Equipamiento");
        jBBuscar.setEnabled(false);
        jBBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBuscarActionPerformed(evt);
            }
        });

        jTFNombre.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jTFNombre.setText("Ingrese un Nombre");
        jTFNombre.setEnabled(false);

        jLOperacion.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLOperacion.setText("Carga de Equipamiento");
        jLOperacion.setEnabled(false);

        jLDias.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLDias.setText("días");
        jLDias.setEnabled(false);

        jLEstado.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLEstado.setText("Estado");
        jLEstado.setEnabled(false);

        jLTipoEquipamiento.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLTipoEquipamiento.setText("Tipo de Equipamiento");
        jLTipoEquipamiento.setEnabled(false);

        jCBEstado.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jCBEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Activo", "Baja" }));
        jCBEstado.setEnabled(false);

        jCBUnidadMedida.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jCBUnidadMedida.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kilogramo", "Tonelada" }));
        jCBUnidadMedida.setEnabled(false);

        jLFechaAdq.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLFechaAdq.setText("Fecha de Adquisicion");
        jLFechaAdq.setEnabled(false);

        jLFechaUltim.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLFechaUltim.setText("Fecha de Ultimo mantenimiento");
        jLFechaUltim.setEnabled(false);

        jCFechaAdquisicion.setEnabled(false);
        jCFechaAdquisicion.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N

        jLCapacidadMax.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLCapacidadMax.setText("Capacidad Maxima:");
        jLCapacidadMax.setEnabled(false);

        jTFCapacidadMax.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jTFCapacidadMax.setText("Ingrese una capacidad");
        jTFCapacidadMax.setEnabled(false);

        jLUnidadMedida.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLUnidadMedida.setText("Unidad de Medida");
        jLUnidadMedida.setEnabled(false);

        jCBTipoEquipamiento.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jCBTipoEquipamiento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Molino", "Camara Est. Acel.", "Deposito", "Bascula", "Laboratorio" }));
        jCBTipoEquipamiento.setEnabled(false);
        jCBTipoEquipamiento.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCBTipoEquipamientoItemStateChanged(evt);
            }
        });

        jLBascula.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLBascula.setText("Bascula Asociada:");
        jLBascula.setEnabled(false);

        jCBBascula.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jCBBascula.setEnabled(false);

        jCFechaUltimoMantenimiento.setEnabled(false);
        jCFechaUltimoMantenimiento.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N

        jLDireccion.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLDireccion.setText("Direccion");
        jLDireccion.setEnabled(false);

        jBConcretarAccion.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jBConcretarAccion.setText("Aceptar");
        jBConcretarAccion.setEnabled(false);
        jBConcretarAccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBConcretarAccionActionPerformed(evt);
            }
        });

        jBCancelar.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jBCancelar.setText("Cancelar");
        jBCancelar.setEnabled(false);
        jBCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(18, 18, 18)
                        .addComponent(jCBOperacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jBBuscar))
                    .addComponent(jLOperacion)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLTipoEquipamiento)
                        .addGap(18, 18, 18)
                        .addComponent(jCBTipoEquipamiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLBascula)
                        .addGap(18, 18, 18)
                        .addComponent(jCBBascula, javax.swing.GroupLayout.PREFERRED_SIZE, 507, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLNombre)
                        .addGap(12, 12, 12)
                        .addComponent(jTFNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(74, 74, 74)
                        .addComponent(jLEstado)
                        .addGap(12, 12, 12)
                        .addComponent(jCBEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLDireccion)
                        .addGap(12, 12, 12)
                        .addComponent(jTFDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLFechaAdq)
                        .addGap(128, 128, 128)
                        .addComponent(jCFechaAdquisicion, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLFechaUltim)
                        .addGap(18, 18, 18)
                        .addComponent(jCFechaUltimoMantenimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLUnidadMedida)
                        .addGap(12, 12, 12)
                        .addComponent(jCBUnidadMedida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLCapacidadMax)
                        .addGap(12, 12, 12)
                        .addComponent(jTFCapacidadMax, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLDuracionMax)
                        .addGap(18, 18, 18)
                        .addComponent(jTFDuracionMax, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jLDias)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBConcretarAccion)
                .addGap(18, 18, 18)
                .addComponent(jBCancelar)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel12))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jCBOperacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jBBuscar))
                .addGap(18, 18, 18)
                .addComponent(jLOperacion)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCBTipoEquipamiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCBBascula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLTipoEquipamiento)
                            .addComponent(jLBascula))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLNombre))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jTFNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLEstado))
                    .addComponent(jCBEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLDireccion))
                    .addComponent(jTFDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLFechaAdq)
                    .addComponent(jCFechaAdquisicion, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLFechaUltim)
                    .addComponent(jCFechaUltimoMantenimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLUnidadMedida))
                    .addComponent(jCBUnidadMedida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLCapacidadMax))
                    .addComponent(jTFCapacidadMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTFDuracionMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLDuracionMax)
                            .addComponent(jLDias))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBConcretarAccion)
                    .addComponent(jBCancelar))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jCBOperacionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCBOperacionItemStateChanged
        if (!jCBOperacion.getSelectedItem().equals("Seleccionar")){
            this.organizarElementos();

        }

    }//GEN-LAST:event_jCBOperacionItemStateChanged

    private void jBBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBuscarActionPerformed
        //BuscarEquipamiento unaVentana = new BuscarEquipamiento(this.organizacion, this, this.trayectoriaActual);
        //this.setEnabled(false);
    }//GEN-LAST:event_jBBuscarActionPerformed

    private void jCBTipoEquipamientoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCBTipoEquipamientoItemStateChanged
        deshabilitarTodo();
        organizarElementos();
        habilitarParametrosAdicionalesSegunEquipamiento();
    }//GEN-LAST:event_jCBTipoEquipamientoItemStateChanged

    private void jBConcretarAccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBConcretarAccionActionPerformed
        try {
            Bascula unaBasculaAsociada = null;
            switch ((String)jCBOperacion.getSelectedItem()){
                case "Alta":
                switch ((String)jCBTipoEquipamiento.getSelectedItem()){
                    case "Molino":
                    unaBasculaAsociada = this.organizacion.getUnaBascula((String) jCBBascula.getSelectedItem());
                    this.organizacion.registrarEquipamiento((String) jCBTipoEquipamiento.getSelectedItem(), jTFNombre.getText(), jTFDireccion.getText(), jCFechaAdquisicion.getCalendar(), jCFechaUltimoMantenimiento.getCalendar(), jTFCapacidadMax.getText(),(String) jCBUnidadMedida.getSelectedItem(), unaBasculaAsociada, "0");
                    break;
                    case "Deposito":
                    unaBasculaAsociada = this.organizacion.getUnaBascula((String) jCBBascula.getSelectedItem());
                    this.organizacion.registrarEquipamiento((String) jCBTipoEquipamiento.getSelectedItem(), jTFNombre.getText(), jTFDireccion.getText(), jCFechaAdquisicion.getCalendar(), jCFechaUltimoMantenimiento.getCalendar(), jTFCapacidadMax.getText(),(String) jCBUnidadMedida.getSelectedItem(), unaBasculaAsociada, "0");
                    break;
                    case "Bascula":
                    this.organizacion.registrarEquipamiento((String) jCBTipoEquipamiento.getSelectedItem(), jTFNombre.getText(), jTFDireccion.getText(), jCFechaAdquisicion.getCalendar(), jCFechaUltimoMantenimiento.getCalendar(), jTFCapacidadMax.getText(),(String) jCBUnidadMedida.getSelectedItem(), unaBasculaAsociada, "0");
                    cargaBasculas();//Actualizar lista de basculas disponibles
                    break;
                    case "Camara Est. Acel.":
                    unaBasculaAsociada = this.organizacion.getUnaBascula((String) jCBBascula.getSelectedItem());
                    this.organizacion.registrarEquipamiento("Camara de estacionamiento acelerado", jTFNombre.getText(), jTFDireccion.getText(), jCFechaAdquisicion.getCalendar(), jCFechaUltimoMantenimiento.getCalendar(), jTFCapacidadMax.getText(),(String) jCBUnidadMedida.getSelectedItem(), unaBasculaAsociada, (String)jTFDuracionMax.getText());
                    break;
                    case "Laboratorio":
                    unaBasculaAsociada = this.organizacion.getUnaBascula((String) jCBBascula.getSelectedItem());
                    this.organizacion.registrarEquipamiento("Laboratorio", jTFNombre.getText(), jTFDireccion.getText(), jCFechaAdquisicion.getCalendar(), jCFechaUltimoMantenimiento.getCalendar(), jTFCapacidadMax.getText(),(String) jCBUnidadMedida.getSelectedItem(), unaBasculaAsociada, (String)jTFDuracionMax.getText());
                    break;
                }
                break;
                case "Baja":
                this.organizacion.darDeBajaUnEquipamiento(unEquipamientoSeleccionado);
                break;
                case "Modificacion":
                unaBasculaAsociada = this.organizacion.getUnaBascula((String) jCBBascula.getSelectedItem());
                if (unEquipamientoSeleccionado!= null && unEquipamientoSeleccionado instanceof CamaraEstacionamiento){
                    try {
                        this.organizacion.modificarUnEquipamiento(unEquipamientoSeleccionado, jTFNombre.getText(), jTFDireccion.getText(), jCFechaAdquisicion.getCalendar(), jCFechaUltimoMantenimiento.getCalendar(), Float.parseFloat(jTFCapacidadMax.getText()),(String) jCBUnidadMedida.getSelectedItem(), unaBasculaAsociada, Float.parseFloat(jTFDuracionMax.getText()), (String)jCBEstado.getSelectedItem());
                    } catch (NumberFormatException e){
                        JOptionPane.showMessageDialog(null, "Por favor, ingrese una capacidad Maxima y una duración máxima de estacionamiento en formato valido (Solo numeros y un punto)");
                        return;
                    }
                }else{
                    this.organizacion.modificarUnEquipamiento(unEquipamientoSeleccionado, jTFNombre.getText(), jTFDireccion.getText(), jCFechaAdquisicion.getCalendar(), jCFechaUltimoMantenimiento.getCalendar(), Float.parseFloat(jTFCapacidadMax.getText()),(String) jCBUnidadMedida.getSelectedItem(), unaBasculaAsociada, 0, (String)jCBEstado.getSelectedItem());
                }

                break;
            }
            JOptionPane.showMessageDialog(null, "Operacion realizada con exito.");
            limpiarCampos();
        } catch (ExcepcionCargaParametros ex) {
            JOptionPane.showMessageDialog(null, "Error: "+ex.getMessage());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Ocurrio un error en la Base de datos: "+ex.getMessage());
        } catch (ExcepcionPersistencia ex) {
            JOptionPane.showMessageDialog(null, "Ocurrio un error en la Persistencia: "+ex.getMessage());
        }
    }//GEN-LAST:event_jBConcretarAccionActionPerformed

    private void jBCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelarActionPerformed
        this.limpiarCampos();
    }//GEN-LAST:event_jBCancelarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBBuscar;
    private javax.swing.JButton jBCancelar;
    private javax.swing.JButton jBConcretarAccion;
    private javax.swing.JComboBox<String> jCBBascula;
    private javax.swing.JComboBox<String> jCBEstado;
    private javax.swing.JComboBox<String> jCBOperacion;
    private javax.swing.JComboBox<String> jCBTipoEquipamiento;
    private javax.swing.JComboBox<String> jCBUnidadMedida;
    private com.toedter.calendar.JDateChooser jCFechaAdquisicion;
    private com.toedter.calendar.JDateChooser jCFechaUltimoMantenimiento;
    private javax.swing.JLabel jLBascula;
    private javax.swing.JLabel jLCapacidadMax;
    private javax.swing.JLabel jLDias;
    private javax.swing.JLabel jLDireccion;
    private javax.swing.JLabel jLDuracionMax;
    private javax.swing.JLabel jLEstado;
    private javax.swing.JLabel jLFechaAdq;
    private javax.swing.JLabel jLFechaUltim;
    private javax.swing.JLabel jLNombre;
    private javax.swing.JLabel jLOperacion;
    private javax.swing.JLabel jLTipoEquipamiento;
    private javax.swing.JLabel jLUnidadMedida;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JTextField jTFCapacidadMax;
    private javax.swing.JTextField jTFDireccion;
    private javax.swing.JTextField jTFDuracionMax;
    private javax.swing.JTextField jTFNombre;
    // End of variables declaration//GEN-END:variables

    private void deshabilitarTodo() {
        jLOperacion.setEnabled(false);
        jLTipoEquipamiento.setEnabled(false);
        jLNombre.setEnabled(false);
        jLDireccion.setEnabled(false);
        jLBascula.setEnabled(false);
        
        jLEstado.setEnabled(false);
        jLFechaAdq.setEnabled(false);
        jLFechaUltim.setEnabled(false);
        jLCapacidadMax.setEnabled(false);
        jLUnidadMedida.setEnabled(false);
        jLDuracionMax.setEnabled(false);
        jLDias.setEnabled(false);
        
        jLBascula.setVisible(false);
        jLEstado.setVisible(false);
        
        jLDuracionMax.setVisible(false);
        jTFDuracionMax.setVisible(false);
        jLDias.setVisible(false);
        jBBuscar.setVisible(false);
        jCBBascula.setVisible(false);
        jCBEstado.setVisible(false);
        
        jCBOperacion.setEnabled(false);
        jCBTipoEquipamiento.setEnabled(false);
        jCBBascula.setEnabled(false);
        jTFNombre.setEnabled(false);
        jCBEstado.setEnabled(false);
        jTFDireccion.setEnabled(false);
        jCFechaAdquisicion.setEnabled(false);
        jCFechaUltimoMantenimiento.setEnabled(false);
        jTFCapacidadMax.setEnabled(false);
        jCBUnidadMedida.setEnabled(false);
        jTFDuracionMax.setEnabled(false);
        
        jBConcretarAccion.setEnabled(false);
        jBCancelar.setEnabled(false);
    }

    private void cargaBasculas() {
        this.jCBBascula.removeAllItems();
        this.jCBBascula.addItem("Seleccionar");
        ArrayList basculasActivas = organizacion.getBasculasActivas();
        Iterator recorredorDeBasculas = basculasActivas.iterator();
        while (recorredorDeBasculas.hasNext()){
            Bascula unaBascula = (Bascula) recorredorDeBasculas.next();
            this.jCBBascula.addItem(unaBascula.toString());
        }
    }

    private void organizarElementos() {
        this.cargaBasculas();
        this.deshabilitarTodo();
        switch((String)jCBOperacion.getSelectedItem()){
            case "Alta":
                prepararAlta();
                habilitarParametrosAdicionalesSegunEquipamiento();
                break;
            case "Baja":
                prepararBaja();
                visibilizarParametrosAdicionalesSegunEquipamiento();
                break;
            case "Modificacion":
                prepararModificacion();
                visibilizarParametrosAdicionalesSegunEquipamiento();
                break;
            default:
                limpiarCampos();
                break;
                
        }
    }

    private void prepararAlta() {
        this.operacionActual = "Alta";
        jLTipoEquipamiento.setEnabled(true);
        jLNombre.setEnabled(true);
        jLDireccion.setEnabled(true);
        jLEstado.setEnabled(true);
        jLFechaAdq.setEnabled(true);
        jLFechaUltim.setEnabled(true);
        jLCapacidadMax.setEnabled(true);
        jLUnidadMedida.setEnabled(true);
        
        jCBTipoEquipamiento.setEnabled(true);
        jTFNombre.setEnabled(true);
        jCBEstado.setEnabled(true);
        jTFDireccion.setEnabled(true);
        jCFechaAdquisicion.setEnabled(true);
        jCFechaUltimoMantenimiento.setEnabled(true);
        jTFCapacidadMax.setEnabled(true);
        jCBUnidadMedida.setEnabled(true);
        jTFDuracionMax.setEnabled(true);
        
        jBConcretarAccion.setEnabled(true);
        jBCancelar.setEnabled(true);
        
        
        jBConcretarAccion.setText("Dar de Alta un equipamiento");
        jLOperacion.setText("Alta de un equipamiento.");
        jLOperacion.setEnabled(true);
        switch ((String)jCBTipoEquipamiento.getSelectedItem()){
            case "Molino":
                jCBBascula.setEnabled(true);
                jLBascula.setEnabled(true);
                break;
            case "Deposito":
                jCBBascula.setEnabled(true);
                jLBascula.setEnabled(true);
                break;
            case "Bascula":
                jCBBascula.setEnabled(false);
                jLBascula.setEnabled(false);
                break;
            case "Camara Est. Acel.":
                jCBBascula.setEnabled(true);
                jLBascula.setEnabled(true);
                jLDuracionMax.setVisible(true);
                jTFDuracionMax.setVisible(true);
                jLDias.setVisible(true);
                jLDuracionMax.setEnabled(true);
                jTFDuracionMax.setEnabled(true);
                jLDias.setEnabled(true);
                break;
        }
    }

    private void habilitarParametrosAdicionalesSegunEquipamiento() {
        switch ((String)jCBTipoEquipamiento.getSelectedItem()){
            case "Molino":
                jCBBascula.setVisible(true);
                jLBascula.setVisible(true);
                jCBBascula.setEnabled(true);
                jLBascula.setEnabled(true);
                break;
            case "Deposito":
                jCBBascula.setVisible(true);
                jLBascula.setVisible(true);
                jCBBascula.setEnabled(true);
                jLBascula.setEnabled(true);
                break;
            case "Bascula":

                jCBBascula.setEnabled(false);
                jLBascula.setEnabled(false);
                break;
            case "Camara Est. Acel.":
                jCBBascula.setVisible(true);
                jLBascula.setVisible(true);
                jCBBascula.setEnabled(true);
                jLBascula.setEnabled(true);
                jLDuracionMax.setVisible(true);
                jLDuracionMax.setEnabled(true);
                jTFDuracionMax.setVisible(true);
                jTFDuracionMax.setEnabled(true);
                jLDias.setVisible(true);
                jLDias.setEnabled(true);
                break;
        }
    }

    private void limpiarCampos() {
        this.operacionActual = "";
        jLOperacion.setText("Operacion:");

        jTFNombre.setText("");
        jTFDireccion.setText("");
        jCBBascula.setSelectedItem("Seleccionar");  //ojo con esto.
        jTFCapacidadMax.setText("");

        jLOperacion.setEnabled(false);
        jBBuscar.setVisible(false);
        jLTipoEquipamiento.setEnabled(false);
        jCBTipoEquipamiento.setEnabled(false);
        jLBascula.setEnabled(false);
        jCBBascula.setEnabled(false);
        jLNombre.setEnabled(false);
        jTFNombre.setEnabled(false);
        jLDireccion.setEnabled(false);
        jTFDireccion.setEnabled(false);
        jLFechaAdq.setEnabled(false);
        jCFechaAdquisicion.setEnabled(false);
        jLFechaUltim.setEnabled(false);
        jCFechaUltimoMantenimiento.setEnabled(false);
        jLCapacidadMax.setEnabled(false);
        jTFCapacidadMax.setEnabled(false);
        jLUnidadMedida.setEnabled(false);
        jCBUnidadMedida.setEnabled(false);
        jLDuracionMax.setEnabled(false);
        jTFDuracionMax.setEnabled(false);
        jBConcretarAccion.setEnabled(false);
        jBCancelar.setEnabled(false);
        jLDias.setEnabled(false);
        jCBOperacion.setSelectedItem("Seleccionar");
        jLEstado.setEnabled(false);
        jCBEstado.setEnabled(false);
        this.jCBOperacion.setEnabled(true);
        this.unEquipamientoSeleccionado = null;
    }

    private void prepararBaja() {
        this.operacionActual = "Baja";
        jLOperacion.setEnabled(true);
        jLTipoEquipamiento.setEnabled(true);
        jLNombre.setEnabled(true);
        jLDireccion.setEnabled(true);
        jLBascula.setEnabled(true);
        jLEstado.setEnabled(true);
        jLFechaAdq.setEnabled(true);
        jLFechaUltim.setEnabled(true);
        jLCapacidadMax.setEnabled(true);
        jLUnidadMedida.setEnabled(true);
        jLDuracionMax.setEnabled(true);
        jLDias.setEnabled(true);
        
        jLEstado.setVisible(true);
        jCBEstado.setVisible(true);
        
        
        jBBuscar.setVisible(true);
        jBBuscar.setEnabled(true);
        jBCancelar.setEnabled(true);
        
        jLOperacion.setText("Baja de un equipamiento.");
        if (this.unEquipamientoSeleccionado == null)
            return;
        jBConcretarAccion.setText("Dar de Baja un equipamiento");
    }

    private void visibilizarParametrosAdicionalesSegunEquipamiento() {
        switch ((String)jCBTipoEquipamiento.getSelectedItem()){
            case "Molino":
                jCBBascula.setVisible(true);
                jLBascula.setVisible(true);
                break;
            case "Deposito":
                jCBBascula.setVisible(true);
                jLBascula.setVisible(true);
                break;
            case "Bascula":

                jCBBascula.setVisible(false);
                jLBascula.setVisible(false);
                break;
            case "Camara Est. Acel.":
                jCBBascula.setVisible(true);
                jLBascula.setVisible(true);
                jLDuracionMax.setVisible(true);
                jTFDuracionMax.setVisible(true);
                jLDias.setVisible(true);
                break;
        }  
    }

    private void prepararModificacion() {
        this.operacionActual = "Modificacion";
        jBBuscar.setVisible(true);
        jBBuscar.setEnabled(true);
        jBCancelar.setEnabled(true);        
        jBConcretarAccion.setText("Guardar cambios");
        if (this.unEquipamientoSeleccionado == null)
            return;
        jLOperacion.setEnabled(true);
        jLTipoEquipamiento.setEnabled(true);
        jLNombre.setEnabled(true);
        jLDireccion.setEnabled(true);
        jLEstado.setEnabled(true);
        jLFechaAdq.setEnabled(true);
        jLFechaUltim.setEnabled(true);
        jLCapacidadMax.setEnabled(true);
        jLUnidadMedida.setEnabled(true);
        
        jLEstado.setVisible(true);
        jCBEstado.setVisible(true);

        jTFNombre.setEnabled(true);
        jCBEstado.setEnabled(true);
        jTFDireccion.setEnabled(true);
        jCFechaAdquisicion.setEnabled(true);
        jCFechaUltimoMantenimiento.setEnabled(true);
        jTFCapacidadMax.setEnabled(true);
        jCBUnidadMedida.setEnabled(true);
        
        jBConcretarAccion.setEnabled(true);
        
        switch ((String)unEquipamientoSeleccionado.getClass().getSimpleName()){
            case "Molino":
                jCBBascula.setEnabled(true);
                jCBBascula.setSelectedItem(unEquipamientoSeleccionado.getBasculaAsociada().getNombre());
                jLBascula.setEnabled(true);
                break;
            case "Deposito":
                jCBBascula.setEnabled(true);
                jCBBascula.setSelectedItem(unEquipamientoSeleccionado.getBasculaAsociada().getNombre());
                jLBascula.setEnabled(true);
                break;
            case "Bascula":
                jCBBascula.setEnabled(false);
                jLBascula.setEnabled(false);
                break;
            case "CamaraEstacionamiento":
                jCBBascula.setEnabled(true);
                jCBBascula.setSelectedItem(unEquipamientoSeleccionado.getBasculaAsociada().getNombre());
                jLBascula.setEnabled(true);
                jLDuracionMax.setVisible(true);
                jTFDuracionMax.setVisible(true);
                jLDias.setVisible(true);
                jLDuracionMax.setEnabled(true);
                jTFDuracionMax.setEnabled(true);
                jLDias.setEnabled(true);
                break;
        }
    }
}
