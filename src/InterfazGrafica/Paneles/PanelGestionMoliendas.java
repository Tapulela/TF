/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package InterfazGrafica.Paneles;

import InterfazGrafica.Busqueda.BuscarEquipamiento;
import InterfazGrafica.Busqueda.BuscarLote;
import InterfazGrafica.Busqueda.BuscarOrdenDeProduccion;
import InterfazGrafica.GestionMoliendas;
import InterfazGrafica.Inicio;
import InterfazGrafica.ParametrosDeInterfaz;
import InterfazGrafica.TransferenciaInstancias;
import InterfazGrafica.UtilidadesInterfazGrafica;
import static InterfazGrafica.UtilidadesInterfazGrafica.establecerAlineacionDeTabla;
import LogicaDeNegocio.DetalleTransformacion;
import LogicaDeNegocio.ExcepcionCargaParametros;
import LogicaDeNegocio.Lote;
import LogicaDeNegocio.Molienda;
import LogicaDeNegocio.Molino;
import LogicaDeNegocio.OrdenDeProduccion;
import LogicaDeNegocio.Organizacion;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Map;
import javax.swing.JCheckBox;
import javax.swing.JFrame;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author usuario
 */
public class PanelGestionMoliendas extends Panel implements TransferenciaInstancias{

    /**
     * Creates new form PanelGestionEstacionamientos
     */
    
    
    public PanelGestionMoliendas() {
        initComponents();
    }
    
    private Molienda unObjetoSeleccionado;
    private OrdenDeProduccion unaOrdenProduccionSeleccionada;    
    
    private Molino unMolinoSeleccionado;
    private OrdenDeProduccion unaOrdenDeProduccion;
    private Lote unLoteSeleccionado;
    
    public static final String[] criterios = new String[] {"Molino", "Orden de produccion", "Lote", "Estado", "Fecha de origen"};
    
    
    private Map<String, Boolean> criteriosSeleccionados;
    private ArrayList detallesAsociados = new ArrayList();
    private DetalleTransformacion unDetalle;
    
    public PanelGestionMoliendas(JFrame ventanaContenedora, String trayectoriaActual, Organizacion unaOrganizacion, String tituloReporte) {
        super(ventanaContenedora, trayectoriaActual, unaOrganizacion, criterios, tituloReporte);
        initComponents();
        this.setVisible(true);
        establecerAlineacionDeTabla(jTable1, SwingConstants.CENTER);
        UtilidadesInterfazGrafica.configurarTabla(jTable1);
        UtilidadesInterfazGrafica.configurarTabla(jTable3);
        establecerAlineacionDeTabla(jTable3, SwingConstants.CENTER);
        ParametrosDeInterfaz.confeccionarComponentes(this.getComponents());
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton5 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jCBCriterio1 = new javax.swing.JCheckBox();
        jCBCriterio2 = new javax.swing.JCheckBox();
        jCBCriterio4 = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        datoCriterio4 = new javax.swing.JComboBox<>();
        jCBCriterio5 = new javax.swing.JCheckBox();
        jLEstatico1Criterio5 = new javax.swing.JLabel();
        dato1Criterio5 = new com.toedter.calendar.JDateChooser();
        jLEstatico2Criterio5 = new javax.swing.JLabel();
        dato2Criterio5 = new com.toedter.calendar.JDateChooser();
        botonCriterio1 = new javax.swing.JButton();
        jLCriterio1 = new javax.swing.JLabel();
        jLEstaticoCriterio1 = new javax.swing.JLabel();
        botonCriterio2 = new javax.swing.JButton();
        jLEstaticoCriterio2 = new javax.swing.JLabel();
        jLCriterio2 = new javax.swing.JLabel();
        jLCriterio3 = new javax.swing.JLabel();
        jLEstaticoCriterio3 = new javax.swing.JLabel();
        jCBCriterio3 = new javax.swing.JCheckBox();
        botonCriterio3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLObjetoSeleccionado = new javax.swing.JLabel();
        jBVerDetalle = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();

        setBackground(new java.awt.Color(204, 204, 204));

        jButton5.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/InterfazGrafica/Assets/icono-Opcion.png"))); // NOI18N
        jButton5.setText("Gestionar Moliendas");
        jButton5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Consultas de Moliendas");

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLabel3.setText("Criterios de b√∫squeda");

        jCBCriterio1.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jCBCriterio1.setText("Molino asociado");
        jCBCriterio1.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/InterfazGrafica/Assets/CheckTic.png"))); // NOI18N
        jCBCriterio1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCBCriterio1ItemStateChanged(evt);
            }
        });

        jCBCriterio2.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jCBCriterio2.setText("Orden de produccion implicada");
        jCBCriterio2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCBCriterio2ItemStateChanged(evt);
            }
        });

        jCBCriterio4.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jCBCriterio4.setText("Estado");
        jCBCriterio4.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCBCriterio4ItemStateChanged(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jButton1.setText("Realizar consulta");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        datoCriterio4.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        datoCriterio4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "Regular", "Anulado" }));
        datoCriterio4.setEnabled(false);

        jCBCriterio5.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jCBCriterio5.setText("Fecha de origen");
        jCBCriterio5.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCBCriterio5ItemStateChanged(evt);
            }
        });

        jLEstatico1Criterio5.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLEstatico1Criterio5.setText("Desde");
        jLEstatico1Criterio5.setEnabled(false);

        dato1Criterio5.setEnabled(false);
        dato1Criterio5.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N

        jLEstatico2Criterio5.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLEstatico2Criterio5.setText("Hasta");
        jLEstatico2Criterio5.setEnabled(false);

        dato2Criterio5.setEnabled(false);
        dato2Criterio5.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N

        botonCriterio1.setFont(new java.awt.Font("Dialog", 0, 20)); // NOI18N
        botonCriterio1.setText("Buscar una Camara de estacionamiento");
        botonCriterio1.setEnabled(false);
        botonCriterio1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCriterio1ActionPerformed(evt);
            }
        });

        jLCriterio1.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N

        jLEstaticoCriterio1.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLEstaticoCriterio1.setText("Equipamiento seleccionado:");

        botonCriterio2.setFont(new java.awt.Font("Dialog", 0, 20)); // NOI18N
        botonCriterio2.setText("Buscar una Orden de produccion");
        botonCriterio2.setEnabled(false);
        botonCriterio2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCriterio2ActionPerformed(evt);
            }
        });

        jLEstaticoCriterio2.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLEstaticoCriterio2.setText("Orden de produccion seleccionada:");

        jLCriterio2.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N

        jLCriterio3.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N

        jLEstaticoCriterio3.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLEstaticoCriterio3.setText("Lote seleccionado:");

        jCBCriterio3.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jCBCriterio3.setText("Lote implicado");
        jCBCriterio3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCBCriterio3ItemStateChanged(evt);
            }
        });

        botonCriterio3.setFont(new java.awt.Font("Dialog", 0, 20)); // NOI18N
        botonCriterio3.setText("Buscar un lote");
        botonCriterio3.setEnabled(false);
        botonCriterio3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCriterio3ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jButton2.setText("Generar reporte");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jCBCriterio1)
                                        .addGap(18, 18, 18)
                                        .addComponent(botonCriterio1))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jCBCriterio3)
                                        .addGap(18, 18, 18)
                                        .addComponent(botonCriterio3))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLEstaticoCriterio3)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLCriterio3, javax.swing.GroupLayout.PREFERRED_SIZE, 554, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jCBCriterio4)
                                        .addGap(18, 18, 18)
                                        .addComponent(datoCriterio4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jCBCriterio5)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLEstatico1Criterio5)
                                        .addGap(6, 6, 6)
                                        .addComponent(dato1Criterio5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLEstatico2Criterio5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(dato2Criterio5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 575, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jCBCriterio2)
                                .addGap(18, 18, 18)
                                .addComponent(botonCriterio2)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLEstaticoCriterio1)
                                .addGap(18, 18, 18)
                                .addComponent(jLCriterio1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLEstaticoCriterio2)
                                .addGap(18, 18, 18)
                                .addComponent(jLCriterio2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButton1)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCBCriterio1)
                    .addComponent(botonCriterio1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLEstaticoCriterio1)
                    .addComponent(jLCriterio1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCBCriterio2)
                    .addComponent(botonCriterio2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLEstaticoCriterio2)
                    .addComponent(jLCriterio2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCBCriterio3)
                    .addComponent(botonCriterio3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLEstaticoCriterio3)
                    .addComponent(jLCriterio3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCBCriterio4)
                    .addComponent(datoCriterio4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jCBCriterio5)
                    .addComponent(jLEstatico1Criterio5)
                    .addComponent(dato1Criterio5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLEstatico2Criterio5)
                    .addComponent(dato2Criterio5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setFont(new java.awt.Font("Dialog", 0, 20)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Camara asociada", "Estado", "Fecha de origen"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel5.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Para ver el detalle de una molienda, seleccione uno en la tabla y presione el bot√≥n Ver detalle");

        jLabel6.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("ID de molienda");

        jLObjetoSeleccionado.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLObjetoSeleccionado.setForeground(new java.awt.Color(0, 0, 0));
        jLObjetoSeleccionado.setText("#");

        jBVerDetalle.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jBVerDetalle.setText("Ver detalle");
        jBVerDetalle.setEnabled(false);
        jBVerDetalle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBVerDetalleActionPerformed(evt);
            }
        });

        jTable3.setAutoCreateRowSorter(true);
        jTable3.setFont(new java.awt.Font("Dialog", 0, 20)); // NOI18N
        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Etiqueta", "O.P.", "O.C.", "Cantidad de bolsas a utilizar", "Total bolsas disponibles", "Cantidad de Kgs a utilizar", "Total kgs disponibles"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTable3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(jLObjetoSeleccionado)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jBVerDetalle))
                            .addComponent(jLabel4)
                            .addComponent(jButton5))
                        .addGap(0, 379, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton5)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jBVerDetalle)
                    .addComponent(jLObjetoSeleccionado)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(44, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        GestionMoliendas ventana = new GestionMoliendas(((Inicio) ventanaContenedora).getOrganizacion(), ventanaContenedora, ((Inicio) ventanaContenedora).getTrayectoriaActual());
        ventanaContenedora.dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jCBCriterio1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCBCriterio1ItemStateChanged
        botonCriterio1.setEnabled(jCBCriterio1.isSelected());
        jLEstaticoCriterio1.setEnabled(jCBCriterio1.isSelected());
        jLCriterio1.setEnabled(jCBCriterio1.isSelected());
        asignarCriterio(0, (JCheckBox) evt.getSource());

    }//GEN-LAST:event_jCBCriterio1ItemStateChanged

    private void jCBCriterio2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCBCriterio2ItemStateChanged
        botonCriterio2.setEnabled(jCBCriterio2.isSelected());
        jLEstaticoCriterio2.setEnabled(jCBCriterio2.isSelected());
        jLCriterio2.setEnabled(jCBCriterio2.isSelected());
        asignarCriterio(1, (JCheckBox) evt.getSource());
    }//GEN-LAST:event_jCBCriterio2ItemStateChanged

    private void jCBCriterio4ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCBCriterio4ItemStateChanged
        datoCriterio4.setEnabled(jCBCriterio4.isSelected());
        asignarCriterio(3, (JCheckBox) evt.getSource());
    }//GEN-LAST:event_jCBCriterio4ItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        cargarTabla(jTable1, organizacion.getMoliendas());
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jCBCriterio5ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCBCriterio5ItemStateChanged
        jLEstatico1Criterio5.setEnabled(jCBCriterio5.isSelected());
        dato1Criterio5.setEnabled(jCBCriterio5.isSelected());
        jLEstatico2Criterio5.setEnabled(jCBCriterio5.isSelected());
        dato2Criterio5.setEnabled(jCBCriterio5.isSelected());
        asignarCriterio(4, (JCheckBox) evt.getSource());
    }//GEN-LAST:event_jCBCriterio5ItemStateChanged

    private void botonCriterio1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCriterio1ActionPerformed
        BuscarEquipamiento unaVentana = new BuscarEquipamiento(organizacion, ventanaContenedora, trayectoriaActual);
        ventanaContenedora.dispose();
    }//GEN-LAST:event_botonCriterio1ActionPerformed

    private void botonCriterio2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCriterio2ActionPerformed
        BuscarOrdenDeProduccion unaVentana = new BuscarOrdenDeProduccion(organizacion, ventanaContenedora, trayectoriaActual);
        ventanaContenedora.dispose();
    }//GEN-LAST:event_botonCriterio2ActionPerformed

    private void jCBCriterio3ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCBCriterio3ItemStateChanged
        botonCriterio3.setEnabled(jCBCriterio3.isSelected());
        jLEstaticoCriterio3.setEnabled(jCBCriterio3.isSelected());
        jLCriterio3.setEnabled(jCBCriterio3.isSelected());
        asignarCriterio(2, (JCheckBox) evt.getSource());
    }//GEN-LAST:event_jCBCriterio3ItemStateChanged

    private void botonCriterio3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCriterio3ActionPerformed
        BuscarLote unaVentana = new BuscarLote(organizacion, ventanaContenedora, trayectoriaActual, null);
        ventanaContenedora.dispose();
        //      BuscarLote unaVentana = new BuscarLote(this.organizacion, this, this.trayectoriaActual);
        //      TENGO QUE HACER UNA BUSQUEDA DE LOTES QUE PERMITA ELEGIR COMO CRITERIO A LOS EQUIPAMIENTOS.
    }//GEN-LAST:event_botonCriterio3ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int id = Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
        this.unObjetoSeleccionado = this.organizacion.getMoliendas().get(id);
        this.detallesAsociados = this.unObjetoSeleccionado.getDetallesAsociados();
        exhibirObjetoSeleccionado();
        habilitarTablas();
        habilitarBotones();
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        generarReporte(organizacion.getMoliendas());
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jBVerDetalleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBVerDetalleActionPerformed
        actualizarTablaDetalles();
    }//GEN-LAST:event_jBVerDetalleActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonCriterio1;
    private javax.swing.JButton botonCriterio2;
    private javax.swing.JButton botonCriterio3;
    private com.toedter.calendar.JDateChooser dato1Criterio5;
    private com.toedter.calendar.JDateChooser dato2Criterio5;
    private javax.swing.JComboBox<String> datoCriterio4;
    private javax.swing.JButton jBVerDetalle;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton5;
    private javax.swing.JCheckBox jCBCriterio1;
    private javax.swing.JCheckBox jCBCriterio2;
    private javax.swing.JCheckBox jCBCriterio3;
    private javax.swing.JCheckBox jCBCriterio4;
    private javax.swing.JCheckBox jCBCriterio5;
    private javax.swing.JLabel jLCriterio1;
    private javax.swing.JLabel jLCriterio2;
    private javax.swing.JLabel jLCriterio3;
    private javax.swing.JLabel jLEstatico1Criterio5;
    private javax.swing.JLabel jLEstatico2Criterio5;
    private javax.swing.JLabel jLEstaticoCriterio1;
    private javax.swing.JLabel jLEstaticoCriterio2;
    private javax.swing.JLabel jLEstaticoCriterio3;
    private javax.swing.JLabel jLObjetoSeleccionado;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable3;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actualizarUnObjeto(Object unObjeto) {
        
        if (unObjeto instanceof Lote){
            this.unLoteSeleccionado = (Lote) unObjeto;
            exhibirLote();
            asignarObjetoACriterio(2, unObjeto);
        }
        if (unObjeto instanceof Molino){
            this.unMolinoSeleccionado = (Molino) unObjeto;
            exhibirMolino();
            asignarObjetoACriterio(0, unObjeto);
        }
        if (unObjeto instanceof OrdenDeProduccion){
            this.unaOrdenDeProduccion = (OrdenDeProduccion) unObjeto;
            exhibirOrdenProduccion();
            asignarObjetoACriterio(1, unObjeto);
        }
        
    }

    

    private void exhibirObjetoSeleccionado() {
        jLObjetoSeleccionado.setText(""+this.unObjetoSeleccionado.getId());
    }

    private void habilitarBotones() {
        jBVerDetalle.setEnabled(true);
    }

    private void exhibirLote() {
        jLCriterio3.setText("ID de Lote: "+unLoteSeleccionado.getId()+" , etiqueta: "+unLoteSeleccionado.getEtiqueta());
    }

    private void exhibirOrdenProduccion() {
        jLCriterio2.setText("ID de orden de produccion: "+this.unaOrdenDeProduccion.getId());
    }

    private void actualizarTablaDetalles() {
        ((DefaultTableModel)this.jTable3.getModel()).setRowCount(0);
        Iterator recorredorDetallesMolienda = this.detallesAsociados.iterator();
        while (recorredorDetallesMolienda.hasNext()){
            DetalleTransformacion unDetalle = (DetalleTransformacion) recorredorDetallesMolienda.next();
            ((DefaultTableModel)this.jTable3.getModel()).addRow(unDetalle.devolverVector());
        }
    }
    

    private void habilitarTablas() {
        jTable3.setEnabled(true);
    }

    private void exhibirMolino() {
        jLCriterio1.setText(unMolinoSeleccionado.getNombre());
    }

    @Override
    protected void generarObjetos() {
        asignarObjetoACriterio(3, datoCriterio4.getSelectedItem());
        asignarObjetoACriterio(4, generarListaFecha(dato1Criterio5.getCalendar(), dato2Criterio5.getCalendar()));
    }


}
